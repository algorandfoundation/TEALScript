{
  "name": "ARC72",
  "desc": "",
  "methods": [
    {
      "name": "arc72_ownerOf",
      "desc": "Returns the address of the current owner of the NFT with the given tokenId",
      "readonly": true,
      "args": [
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "address",
        "desc": "The current owner of the NFT"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_tokenURI",
      "desc": "Returns a URI pointing to the NFT metadata",
      "readonly": true,
      "args": [
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "byte[256]",
        "desc": "URI to token metadata"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_transferFrom",
      "desc": "Transfers ownership of an NFT",
      "args": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_approve",
      "desc": "Approve a controller for a single NFT",
      "args": [
        {
          "name": "approved",
          "type": "address",
          "desc": "Approved controller address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "desc": "The ID of the NFT"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_setApprovalForAll",
      "desc": "Approve an operator for all NFTs for a user",
      "args": [
        {
          "name": "operator",
          "type": "address",
          "desc": "Approved operator address"
        },
        {
          "name": "approved",
          "type": "bool",
          "desc": "true to give approval, false to revoke"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "mint",
      "args": [
        {
          "name": "to",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_totalSupply",
      "desc": "Returns the number of NFTs currently defined by this contract",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc72_tokenByIndex",
      "desc": "Returns the token ID of the token with the given index among all NFTs defined by the contract",
      "readonly": true,
      "args": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "Token": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "uri",
        "type": "byte[256]"
      },
      {
        "name": "controller",
        "type": "address"
      }
    ],
    "Control": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "controller",
        "type": "address"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 1,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "index": {
          "key": "aW5kZXg=",
          "keyType": "AVMBytes",
          "valueType": "uint256"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "tokenBox": {
          "keyType": "uint256",
          "valueType": "Token"
        },
        "controlBox": {
          "keyType": "Control",
          "valueType": "AVMBytes"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ]
        },
        {
          "teal": 3,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56
          ]
        },
        {
          "teal": 15,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            57,
            58
          ]
        },
        {
          "teal": 16,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            59
          ]
        },
        {
          "teal": 17,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            60,
            61
          ]
        },
        {
          "teal": 18,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            62
          ]
        },
        {
          "teal": 19,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            63,
            64
          ]
        },
        {
          "teal": 20,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            65
          ]
        },
        {
          "teal": 21,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91
          ]
        },
        {
          "teal": 25,
          "source": "examples/arc72/arc72.algo.ts:9",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            92
          ]
        },
        {
          "teal": 30,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            93
          ]
        },
        {
          "teal": 33,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            94,
            95,
            96
          ]
        },
        {
          "teal": 34,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            97
          ]
        },
        {
          "teal": 35,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            98
          ]
        },
        {
          "teal": 36,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            99
          ]
        },
        {
          "teal": 37,
          "source": "examples/arc72/arc72.algo.ts:24",
          "pc": [
            100
          ]
        },
        {
          "teal": 40,
          "source": "examples/arc72/arc72.algo.ts:24",
          "errorMessage": "argument 0 (tokenId) for arc72_ownerOf must be a uint256",
          "pc": [
            101
          ]
        },
        {
          "teal": 43,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 44,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            105
          ]
        },
        {
          "teal": 45,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            106
          ]
        },
        {
          "teal": 46,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            107
          ]
        },
        {
          "teal": 47,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            108
          ]
        },
        {
          "teal": 57,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            109,
            110,
            111
          ]
        },
        {
          "teal": 61,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            112,
            113
          ]
        },
        {
          "teal": 62,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            114
          ]
        },
        {
          "teal": 63,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            115
          ]
        },
        {
          "teal": 64,
          "source": "examples/arc72/arc72.algo.ts:25",
          "pc": [
            116
          ]
        },
        {
          "teal": 65,
          "source": "examples/arc72/arc72.algo.ts:23",
          "pc": [
            117
          ]
        },
        {
          "teal": 70,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            118
          ]
        },
        {
          "teal": 73,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            119,
            120,
            121
          ]
        },
        {
          "teal": 74,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            122
          ]
        },
        {
          "teal": 75,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            123
          ]
        },
        {
          "teal": 76,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            124
          ]
        },
        {
          "teal": 77,
          "source": "examples/arc72/arc72.algo.ts:36",
          "pc": [
            125
          ]
        },
        {
          "teal": 80,
          "source": "examples/arc72/arc72.algo.ts:36",
          "errorMessage": "argument 0 (tokenId) for arc72_tokenURI must be a uint256",
          "pc": [
            126
          ]
        },
        {
          "teal": 83,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            127,
            128,
            129
          ]
        },
        {
          "teal": 84,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            130
          ]
        },
        {
          "teal": 85,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            131
          ]
        },
        {
          "teal": 86,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            132
          ]
        },
        {
          "teal": 87,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            133
          ]
        },
        {
          "teal": 97,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            134,
            135,
            136
          ]
        },
        {
          "teal": 101,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            137,
            138
          ]
        },
        {
          "teal": 102,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            139
          ]
        },
        {
          "teal": 103,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            140
          ]
        },
        {
          "teal": 104,
          "source": "examples/arc72/arc72.algo.ts:37",
          "pc": [
            141
          ]
        },
        {
          "teal": 105,
          "source": "examples/arc72/arc72.algo.ts:35",
          "pc": [
            142
          ]
        },
        {
          "teal": 109,
          "source": "examples/arc72/arc72.algo.ts:40",
          "pc": [
            143,
            144,
            145
          ]
        },
        {
          "teal": 113,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            146,
            147
          ]
        },
        {
          "teal": 114,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            148
          ]
        },
        {
          "teal": 115,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            149,
            150
          ]
        },
        {
          "teal": 116,
          "source": "examples/arc72/arc72.algo.ts:41",
          "pc": [
            151
          ]
        },
        {
          "teal": 117,
          "source": "examples/arc72/arc72.algo.ts:40",
          "pc": [
            152
          ]
        },
        {
          "teal": 122,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            153,
            154,
            155
          ]
        },
        {
          "teal": 123,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            156
          ]
        },
        {
          "teal": 124,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            157
          ]
        },
        {
          "teal": 125,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            158
          ]
        },
        {
          "teal": 126,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            159
          ]
        },
        {
          "teal": 129,
          "source": "examples/arc72/arc72.algo.ts:47",
          "errorMessage": "argument 0 (tokenId) for arc72_transferFrom must be a uint256",
          "pc": [
            160
          ]
        },
        {
          "teal": 132,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            161,
            162,
            163
          ]
        },
        {
          "teal": 133,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            164
          ]
        },
        {
          "teal": 134,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            165
          ]
        },
        {
          "teal": 135,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            166
          ]
        },
        {
          "teal": 136,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            167
          ]
        },
        {
          "teal": 139,
          "source": "examples/arc72/arc72.algo.ts:47",
          "errorMessage": "argument 1 (to) for arc72_transferFrom must be a address",
          "pc": [
            168
          ]
        },
        {
          "teal": 142,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            169,
            170,
            171
          ]
        },
        {
          "teal": 143,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            172
          ]
        },
        {
          "teal": 144,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            173
          ]
        },
        {
          "teal": 145,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            174
          ]
        },
        {
          "teal": 146,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            175
          ]
        },
        {
          "teal": 149,
          "source": "examples/arc72/arc72.algo.ts:47",
          "errorMessage": "argument 2 (_from) for arc72_transferFrom must be a address",
          "pc": [
            176
          ]
        },
        {
          "teal": 152,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            177,
            178,
            179
          ]
        },
        {
          "teal": 153,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            180
          ]
        },
        {
          "teal": 154,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            181
          ]
        },
        {
          "teal": 160,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            182,
            183,
            184
          ]
        },
        {
          "teal": 163,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            185
          ]
        },
        {
          "teal": 164,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            186
          ]
        },
        {
          "teal": 168,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            187,
            188
          ]
        },
        {
          "teal": 169,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            189,
            190
          ]
        },
        {
          "teal": 173,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            191,
            192
          ]
        },
        {
          "teal": 174,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            193,
            194
          ]
        },
        {
          "teal": 175,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            195
          ]
        },
        {
          "teal": 176,
          "source": "examples/arc72/arc72.algo.ts:50",
          "pc": [
            196,
            197
          ]
        },
        {
          "teal": 181,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            198,
            199
          ]
        },
        {
          "teal": 182,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            200,
            201
          ]
        },
        {
          "teal": 183,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            202
          ]
        },
        {
          "teal": 184,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            203
          ]
        },
        {
          "teal": 185,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            204,
            205,
            206
          ]
        },
        {
          "teal": 186,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            207,
            208
          ]
        },
        {
          "teal": 187,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            209,
            210
          ]
        },
        {
          "teal": 188,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            211,
            212
          ]
        },
        {
          "teal": 189,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            213
          ]
        },
        {
          "teal": 190,
          "source": "examples/arc72/arc72.algo.ts:48",
          "pc": [
            214
          ]
        },
        {
          "teal": 191,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            215
          ]
        },
        {
          "teal": 192,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            216
          ]
        },
        {
          "teal": 195,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            217
          ]
        },
        {
          "teal": 196,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            218,
            219,
            220
          ]
        },
        {
          "teal": 197,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            221,
            222
          ]
        },
        {
          "teal": 198,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            223
          ]
        },
        {
          "teal": 199,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            224
          ]
        },
        {
          "teal": 200,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            225
          ]
        },
        {
          "teal": 201,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            226
          ]
        },
        {
          "teal": 204,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            227,
            228,
            229
          ]
        },
        {
          "teal": 209,
          "source": "examples/arc72/arc72.algo.ts:53",
          "pc": [
            230,
            231
          ]
        },
        {
          "teal": 210,
          "source": "examples/arc72/arc72.algo.ts:53",
          "pc": [
            232,
            233
          ]
        },
        {
          "teal": 211,
          "source": "examples/arc72/arc72.algo.ts:53",
          "pc": [
            234,
            235,
            236
          ]
        },
        {
          "teal": 212,
          "source": "examples/arc72/arc72.algo.ts:52",
          "pc": [
            237,
            238,
            239
          ]
        },
        {
          "teal": 216,
          "source": "examples/arc72/arc72.algo.ts:54",
          "errorMessage": "Transfer not authorized",
          "pc": [
            240
          ]
        },
        {
          "teal": 219,
          "source": "examples/arc72/arc72.algo.ts:47",
          "pc": [
            241
          ]
        },
        {
          "teal": 224,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            242,
            243,
            244
          ]
        },
        {
          "teal": 225,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            245
          ]
        },
        {
          "teal": 226,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            246
          ]
        },
        {
          "teal": 227,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            247
          ]
        },
        {
          "teal": 228,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            248
          ]
        },
        {
          "teal": 231,
          "source": "examples/arc72/arc72.algo.ts:64",
          "errorMessage": "argument 0 (tokenId) for arc72_approve must be a uint256",
          "pc": [
            249
          ]
        },
        {
          "teal": 234,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            250,
            251,
            252
          ]
        },
        {
          "teal": 235,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            253
          ]
        },
        {
          "teal": 236,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            254
          ]
        },
        {
          "teal": 237,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            255
          ]
        },
        {
          "teal": 238,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            256
          ]
        },
        {
          "teal": 241,
          "source": "examples/arc72/arc72.algo.ts:64",
          "errorMessage": "argument 1 (approved) for arc72_approve must be a address",
          "pc": [
            257
          ]
        },
        {
          "teal": 244,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            258,
            259,
            260
          ]
        },
        {
          "teal": 245,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            261
          ]
        },
        {
          "teal": 246,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            262
          ]
        },
        {
          "teal": 256,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            263,
            264,
            265
          ]
        },
        {
          "teal": 260,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            266,
            267
          ]
        },
        {
          "teal": 261,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            268,
            269
          ]
        },
        {
          "teal": 262,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            270,
            271
          ]
        },
        {
          "teal": 263,
          "source": "examples/arc72/arc72.algo.ts:65",
          "pc": [
            272
          ]
        },
        {
          "teal": 264,
          "source": "examples/arc72/arc72.algo.ts:64",
          "pc": [
            273
          ]
        },
        {
          "teal": 269,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            274,
            275,
            276
          ]
        },
        {
          "teal": 270,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            277
          ]
        },
        {
          "teal": 271,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            278
          ]
        },
        {
          "teal": 272,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            279
          ]
        },
        {
          "teal": 273,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            280
          ]
        },
        {
          "teal": 276,
          "source": "examples/arc72/arc72.algo.ts:76",
          "errorMessage": "argument 0 (approved) for arc72_setApprovalForAll must be a bool",
          "pc": [
            281
          ]
        },
        {
          "teal": 277,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            282
          ]
        },
        {
          "teal": 278,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            283
          ]
        },
        {
          "teal": 281,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            284,
            285,
            286
          ]
        },
        {
          "teal": 282,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            287
          ]
        },
        {
          "teal": 283,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            288
          ]
        },
        {
          "teal": 284,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            289
          ]
        },
        {
          "teal": 285,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            290
          ]
        },
        {
          "teal": 288,
          "source": "examples/arc72/arc72.algo.ts:76",
          "errorMessage": "argument 1 (operator) for arc72_setApprovalForAll must be a address",
          "pc": [
            291
          ]
        },
        {
          "teal": 291,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            292,
            293,
            294
          ]
        },
        {
          "teal": 292,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            295
          ]
        },
        {
          "teal": 293,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            296
          ]
        },
        {
          "teal": 304,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            297,
            298,
            299
          ]
        },
        {
          "teal": 307,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            300
          ]
        },
        {
          "teal": 311,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            301,
            302
          ]
        },
        {
          "teal": 312,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            303,
            304
          ]
        },
        {
          "teal": 313,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            305
          ]
        },
        {
          "teal": 314,
          "source": "examples/arc72/arc72.algo.ts:77",
          "pc": [
            306,
            307
          ]
        },
        {
          "teal": 319,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            308,
            309
          ]
        },
        {
          "teal": 320,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            310,
            311,
            312
          ]
        },
        {
          "teal": 325,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            313,
            314
          ]
        },
        {
          "teal": 326,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            315
          ]
        },
        {
          "teal": 327,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            316
          ]
        },
        {
          "teal": 328,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            317
          ]
        },
        {
          "teal": 329,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            318
          ]
        },
        {
          "teal": 330,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            319
          ]
        },
        {
          "teal": 331,
          "source": "examples/arc72/arc72.algo.ts:79",
          "pc": [
            320,
            321,
            322
          ]
        },
        {
          "teal": 336,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            323,
            324
          ]
        },
        {
          "teal": 337,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            325
          ]
        },
        {
          "teal": 338,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            326
          ]
        },
        {
          "teal": 339,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            327
          ]
        },
        {
          "teal": 340,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            328,
            329,
            330
          ]
        },
        {
          "teal": 345,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            331,
            332
          ]
        },
        {
          "teal": 346,
          "source": "examples/arc72/arc72.algo.ts:80",
          "pc": [
            333
          ]
        },
        {
          "teal": 349,
          "source": "examples/arc72/arc72.algo.ts:76",
          "pc": [
            334
          ]
        },
        {
          "teal": 354,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            335,
            336,
            337
          ]
        },
        {
          "teal": 355,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            338
          ]
        },
        {
          "teal": 356,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            339
          ]
        },
        {
          "teal": 357,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            340
          ]
        },
        {
          "teal": 358,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            341
          ]
        },
        {
          "teal": 361,
          "source": "examples/arc72/arc72.algo.ts:83",
          "errorMessage": "argument 0 (to) for mint must be a address",
          "pc": [
            342
          ]
        },
        {
          "teal": 364,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            343,
            344,
            345
          ]
        },
        {
          "teal": 365,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            346
          ]
        },
        {
          "teal": 366,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            347
          ]
        },
        {
          "teal": 370,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            348,
            349,
            350
          ]
        },
        {
          "teal": 373,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            351
          ]
        },
        {
          "teal": 374,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            352
          ]
        },
        {
          "teal": 378,
          "source": "examples/arc72/arc72.algo.ts:84",
          "pc": [
            353
          ]
        },
        {
          "teal": 379,
          "source": "examples/arc72/arc72.algo.ts:84",
          "pc": [
            354
          ]
        },
        {
          "teal": 380,
          "source": "examples/arc72/arc72.algo.ts:84",
          "pc": [
            355,
            356
          ]
        },
        {
          "teal": 388,
          "source": "examples/arc72/arc72.algo.ts:87",
          "pc": [
            357,
            358
          ]
        },
        {
          "teal": 389,
          "source": "examples/arc72/arc72.algo.ts:88",
          "pc": [
            359,
            360,
            361,
            362,
            363,
            364,
            365,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387,
            388,
            389,
            390,
            391,
            392,
            393,
            394,
            395,
            396,
            397,
            398,
            399,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428,
            429,
            430,
            431,
            432,
            433,
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459,
            460,
            461,
            462,
            463,
            464,
            465,
            466,
            467,
            468,
            469,
            470,
            471,
            472,
            473,
            474,
            475,
            476,
            477,
            478,
            479,
            480,
            481,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            574,
            575,
            576,
            577,
            578,
            579,
            580,
            581,
            582,
            583,
            584,
            585,
            586,
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610,
            611,
            612,
            613,
            614,
            615,
            616,
            617
          ]
        },
        {
          "teal": 390,
          "source": "examples/arc72/arc72.algo.ts:88",
          "pc": [
            618
          ]
        },
        {
          "teal": 391,
          "source": "examples/arc72/arc72.algo.ts:89",
          "pc": [
            619,
            620
          ]
        },
        {
          "teal": 392,
          "source": "examples/arc72/arc72.algo.ts:89",
          "pc": [
            621
          ]
        },
        {
          "teal": 393,
          "source": "examples/arc72/arc72.algo.ts:86",
          "pc": [
            622,
            623
          ]
        },
        {
          "teal": 397,
          "source": "examples/arc72/arc72.algo.ts:92",
          "pc": [
            624,
            625
          ]
        },
        {
          "teal": 398,
          "source": "examples/arc72/arc72.algo.ts:92",
          "pc": [
            626,
            627
          ]
        },
        {
          "teal": 399,
          "source": "examples/arc72/arc72.algo.ts:92",
          "pc": [
            628
          ]
        },
        {
          "teal": 403,
          "source": "examples/arc72/arc72.algo.ts:93",
          "pc": [
            629,
            630
          ]
        },
        {
          "teal": 404,
          "source": "examples/arc72/arc72.algo.ts:93",
          "pc": [
            631,
            632
          ]
        },
        {
          "teal": 405,
          "source": "examples/arc72/arc72.algo.ts:93",
          "pc": [
            633,
            634,
            635
          ]
        },
        {
          "teal": 409,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            636
          ]
        },
        {
          "teal": 410,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            637,
            638
          ]
        },
        {
          "teal": 411,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            639,
            640,
            641,
            642,
            643,
            644,
            645,
            646,
            647,
            648,
            649,
            650,
            651,
            652,
            653,
            654,
            655,
            656,
            657,
            658,
            659,
            660,
            661,
            662,
            663,
            664,
            665,
            666,
            667,
            668,
            669,
            670,
            671,
            672
          ]
        },
        {
          "teal": 412,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            673
          ]
        },
        {
          "teal": 413,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            674
          ]
        },
        {
          "teal": 414,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            675
          ]
        },
        {
          "teal": 415,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            676
          ]
        },
        {
          "teal": 416,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            677
          ]
        },
        {
          "teal": 419,
          "source": "examples/arc72/arc72.algo.ts:94",
          "errorMessage": "index + 1 overflowed 256 bits",
          "pc": [
            678
          ]
        },
        {
          "teal": 420,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            679
          ]
        },
        {
          "teal": 421,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            680
          ]
        },
        {
          "teal": 422,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            681
          ]
        },
        {
          "teal": 423,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            682
          ]
        },
        {
          "teal": 424,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            683
          ]
        },
        {
          "teal": 425,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            684
          ]
        },
        {
          "teal": 426,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            685
          ]
        },
        {
          "teal": 427,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            686
          ]
        },
        {
          "teal": 428,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            687
          ]
        },
        {
          "teal": 429,
          "source": "examples/arc72/arc72.algo.ts:94",
          "pc": [
            688
          ]
        },
        {
          "teal": 430,
          "source": "examples/arc72/arc72.algo.ts:83",
          "pc": [
            689
          ]
        },
        {
          "teal": 435,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            690
          ]
        },
        {
          "teal": 438,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            691,
            692,
            693
          ]
        },
        {
          "teal": 439,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            694
          ]
        },
        {
          "teal": 440,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            695
          ]
        },
        {
          "teal": 441,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            696
          ]
        },
        {
          "teal": 442,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            697
          ]
        },
        {
          "teal": 445,
          "source": "examples/arc72/arc72.algo.ts:100",
          "errorMessage": "arc72_totalSupply return value overflowed 256 bits",
          "pc": [
            698
          ]
        },
        {
          "teal": 446,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            699
          ]
        },
        {
          "teal": 447,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            700
          ]
        },
        {
          "teal": 448,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            701
          ]
        },
        {
          "teal": 449,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            702
          ]
        },
        {
          "teal": 450,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            703
          ]
        },
        {
          "teal": 451,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            704
          ]
        },
        {
          "teal": 452,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            705
          ]
        },
        {
          "teal": 453,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            706
          ]
        },
        {
          "teal": 454,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            707
          ]
        },
        {
          "teal": 455,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            708
          ]
        },
        {
          "teal": 456,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            709
          ]
        },
        {
          "teal": 457,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            710
          ]
        },
        {
          "teal": 458,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            711
          ]
        },
        {
          "teal": 464,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            712,
            713,
            714
          ]
        },
        {
          "teal": 468,
          "source": "examples/arc72/arc72.algo.ts:102",
          "pc": [
            715
          ]
        },
        {
          "teal": 469,
          "source": "examples/arc72/arc72.algo.ts:102",
          "pc": [
            716
          ]
        },
        {
          "teal": 470,
          "source": "examples/arc72/arc72.algo.ts:100",
          "pc": [
            717
          ]
        },
        {
          "teal": 475,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            718
          ]
        },
        {
          "teal": 478,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            719,
            720,
            721
          ]
        },
        {
          "teal": 479,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            722
          ]
        },
        {
          "teal": 480,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            723
          ]
        },
        {
          "teal": 481,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            724
          ]
        },
        {
          "teal": 482,
          "source": "examples/arc72/arc72.algo.ts:109",
          "pc": [
            725
          ]
        },
        {
          "teal": 485,
          "source": "examples/arc72/arc72.algo.ts:109",
          "errorMessage": "argument 0 (index) for arc72_tokenByIndex must be a uint256",
          "pc": [
            726
          ]
        },
        {
          "teal": 488,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            727,
            728,
            729
          ]
        },
        {
          "teal": 489,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            730
          ]
        },
        {
          "teal": 490,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            731
          ]
        },
        {
          "teal": 491,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            732
          ]
        },
        {
          "teal": 492,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            733
          ]
        },
        {
          "teal": 495,
          "source": "examples/arc72/arc72.algo.ts:108",
          "errorMessage": "arc72_tokenByIndex return value overflowed 256 bits",
          "pc": [
            734
          ]
        },
        {
          "teal": 496,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            735
          ]
        },
        {
          "teal": 497,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            736
          ]
        },
        {
          "teal": 498,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            737
          ]
        },
        {
          "teal": 499,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            738
          ]
        },
        {
          "teal": 500,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            739
          ]
        },
        {
          "teal": 501,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            740
          ]
        },
        {
          "teal": 502,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            741
          ]
        },
        {
          "teal": 503,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            742
          ]
        },
        {
          "teal": 504,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            743
          ]
        },
        {
          "teal": 505,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            744
          ]
        },
        {
          "teal": 506,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            745
          ]
        },
        {
          "teal": 507,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            746
          ]
        },
        {
          "teal": 508,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            747
          ]
        },
        {
          "teal": 514,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            748,
            749,
            750
          ]
        },
        {
          "teal": 518,
          "source": "examples/arc72/arc72.algo.ts:110",
          "pc": [
            751,
            752
          ]
        },
        {
          "teal": 519,
          "source": "examples/arc72/arc72.algo.ts:108",
          "pc": [
            753
          ]
        },
        {
          "teal": 522,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            754
          ]
        },
        {
          "teal": 523,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            755
          ]
        },
        {
          "teal": 526,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            756,
            757,
            758,
            759,
            760,
            761
          ]
        },
        {
          "teal": 527,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            762,
            763,
            764
          ]
        },
        {
          "teal": 528,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            765,
            766,
            767,
            768
          ]
        },
        {
          "teal": 531,
          "source": "examples/arc72/arc72.algo.ts:9",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            769
          ]
        },
        {
          "teal": 534,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            770,
            771,
            772,
            773,
            774,
            775
          ]
        },
        {
          "teal": 535,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            776,
            777,
            778,
            779,
            780,
            781
          ]
        },
        {
          "teal": 536,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            782,
            783,
            784,
            785,
            786,
            787
          ]
        },
        {
          "teal": 537,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            788,
            789,
            790,
            791,
            792,
            793
          ]
        },
        {
          "teal": 538,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            794,
            795,
            796,
            797,
            798,
            799
          ]
        },
        {
          "teal": 539,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            800,
            801,
            802,
            803,
            804,
            805
          ]
        },
        {
          "teal": 540,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            806,
            807,
            808,
            809,
            810,
            811
          ]
        },
        {
          "teal": 541,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            812,
            813,
            814,
            815,
            816,
            817
          ]
        },
        {
          "teal": 542,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            818,
            819,
            820
          ]
        },
        {
          "teal": 543,
          "source": "examples/arc72/arc72.algo.ts:9",
          "pc": [
            821,
            822,
            823,
            824,
            825,
            826,
            827,
            828,
            829,
            830,
            831,
            832,
            833,
            834,
            835,
            836,
            837,
            838
          ]
        },
        {
          "teal": 546,
          "source": "examples/arc72/arc72.algo.ts:9",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            839
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAFIAGAAgCgAiYEAAQVH3x1IP//////////////////////////////////////////BWluZGV4MRgUgQYLMRkIjQwCpgAAAAAAAAAAAAACmAAAAAAAAAAAAAAAKTYaAUkVIhJEiAAEULAjQ4oBAYv/JSK6iSk2GgFJFSISRIgABFCwI0OKAQGL/yIkuomKAgCL/iWL/7uJNhoDSRUiEkQ2GgJJFSISRDYaAUkVIhJEiAACI0OKAwAoSYv9jAAxAIv/UIwBMQCL/xJJQAAKMQCL/SEEIroSEUlAAAaLAb1MSBFBAAqL/Yv+iP+iQgABAIk2GgJJFSISRDYaAUkVIhJEiAACI0OKAgCL/iEEi/+7iTYaAkkVIxJEJVM2GgFJFSISRIgAAiNDigIAKDEAi/9QjACL/kEACosASbxIKL9CAAuLAL1MSEEAA4sAvIk2GgFJFSISRIgAAiNDigEAKEkrZIwAi/+AgAJodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL0FSQ3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDIDUIwBiwCLAb+LAIv/iP4TK4sAgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaBJkyQORCqsSRVJIglMUmeJKYgAEkmTJA5EKqxJFUkiCUxSULAjQ4oAAStkiSk2GgFJFSISRIgAEkmTJA5EKqxJFUkiCUxSULAjQ4oBAYv/iSNDgAS4RHs2NhoAjgH/8QCABHkJahSABMPB/ACABPLxlKCABLTtuk6ABHE0OV+ABKxM+t+ABGTXKnqABG2b/Sc2GgCOCP0W/S/9Uv2r/cv+CP9r/4cA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}