{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optIntoAsset(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "startAuction(uint64,uint64,axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "bid(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimBids()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claim_asset(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteApplication()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "claimableAmount": {
          "type": "uint64",
          "key": "claimableAmount"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "previousBidder": {
          "type": "bytes",
          "key": "previousBidder"
        },
        "auctionEnd": {
          "type": "uint64",
          "key": "auctionEnd"
        },
        "previousBid": {
          "type": "uint64",
          "key": "previousBid"
        },
        "asaAmt": {
          "type": "uint64",
          "key": "asaAmt"
        },
        "asa": {
          "type": "uint64",
          "key": "asa"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Auction",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIntoAsset",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "startAuction",
        "args": [
          {
            "name": "startingPrice",
            "type": "uint64"
          },
          {
            "name": "length",
            "type": "uint64"
          },
          {
            "name": "axfer",
            "type": "axfer"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bid",
        "args": [
          {
            "name": "payment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claimBids",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claim_asset",
        "args": [
          {
            "name": "asset",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}