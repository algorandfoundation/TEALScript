{
  "name": "Simple",
  "desc": "",
  "methods": [
    {
      "name": "incr",
      "args": [
        {
          "name": "i",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "decr",
      "args": [
        {
          "name": "i",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "add",
      "args": [
        {
          "name": "a",
          "type": "uint256"
        },
        {
          "name": "b",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "sub",
      "args": [
        {
          "name": "a",
          "type": "uint256"
        },
        {
          "name": "b",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 1
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "counter": {
          "key": "Y291bnRlcg==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6
          ]
        },
        {
          "teal": 3,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54
          ]
        },
        {
          "teal": 15,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            55,
            56
          ]
        },
        {
          "teal": 16,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            57
          ]
        },
        {
          "teal": 17,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            58,
            59
          ]
        },
        {
          "teal": 18,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            60
          ]
        },
        {
          "teal": 19,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            61,
            62
          ]
        },
        {
          "teal": 20,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            63
          ]
        },
        {
          "teal": 21,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89
          ]
        },
        {
          "teal": 25,
          "source": "examples/simple/simple.algo.ts:3",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            90
          ]
        },
        {
          "teal": 29,
          "source": "examples/simple/simple.algo.ts:6",
          "pc": [
            91,
            92,
            93
          ]
        },
        {
          "teal": 33,
          "source": "examples/simple/simple.algo.ts:7",
          "pc": [
            94
          ]
        },
        {
          "teal": 34,
          "source": "examples/simple/simple.algo.ts:7",
          "pc": [
            95
          ]
        },
        {
          "teal": 35,
          "source": "examples/simple/simple.algo.ts:7",
          "pc": [
            96
          ]
        },
        {
          "teal": 36,
          "source": "examples/simple/simple.algo.ts:7",
          "pc": [
            97,
            98
          ]
        },
        {
          "teal": 37,
          "source": "examples/simple/simple.algo.ts:7",
          "pc": [
            99
          ]
        },
        {
          "teal": 38,
          "source": "examples/simple/simple.algo.ts:7",
          "pc": [
            100
          ]
        },
        {
          "teal": 39,
          "source": "examples/simple/simple.algo.ts:6",
          "pc": [
            101
          ]
        },
        {
          "teal": 44,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 45,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            105
          ]
        },
        {
          "teal": 48,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            106,
            107,
            108
          ]
        },
        {
          "teal": 49,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            109
          ]
        },
        {
          "teal": 50,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            110
          ]
        },
        {
          "teal": 54,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            111,
            112,
            113
          ]
        },
        {
          "teal": 58,
          "source": "examples/simple/simple.algo.ts:11",
          "pc": [
            114,
            115
          ]
        },
        {
          "teal": 59,
          "source": "examples/simple/simple.algo.ts:11",
          "pc": [
            116,
            117,
            118
          ]
        },
        {
          "teal": 60,
          "source": "examples/simple/simple.algo.ts:10",
          "pc": [
            119
          ]
        },
        {
          "teal": 65,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            120,
            121,
            122
          ]
        },
        {
          "teal": 66,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            123
          ]
        },
        {
          "teal": 69,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            124,
            125,
            126
          ]
        },
        {
          "teal": 70,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            127
          ]
        },
        {
          "teal": 71,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            128
          ]
        },
        {
          "teal": 75,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            129,
            130,
            131
          ]
        },
        {
          "teal": 79,
          "source": "examples/simple/simple.algo.ts:15",
          "pc": [
            132
          ]
        },
        {
          "teal": 80,
          "source": "examples/simple/simple.algo.ts:15",
          "pc": [
            133
          ]
        },
        {
          "teal": 81,
          "source": "examples/simple/simple.algo.ts:15",
          "pc": [
            134
          ]
        },
        {
          "teal": 82,
          "source": "examples/simple/simple.algo.ts:15",
          "pc": [
            135,
            136
          ]
        },
        {
          "teal": 83,
          "source": "examples/simple/simple.algo.ts:15",
          "pc": [
            137
          ]
        },
        {
          "teal": 84,
          "source": "examples/simple/simple.algo.ts:15",
          "pc": [
            138
          ]
        },
        {
          "teal": 85,
          "source": "examples/simple/simple.algo.ts:14",
          "pc": [
            139
          ]
        },
        {
          "teal": 90,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            140
          ]
        },
        {
          "teal": 93,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            141,
            142,
            143
          ]
        },
        {
          "teal": 94,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            144
          ]
        },
        {
          "teal": 95,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            145
          ]
        },
        {
          "teal": 96,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            146
          ]
        },
        {
          "teal": 97,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            147
          ]
        },
        {
          "teal": 100,
          "source": "examples/simple/simple.algo.ts:18",
          "errorMessage": "argument 0 (b) for add must be a uint256",
          "pc": [
            148
          ]
        },
        {
          "teal": 103,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            149,
            150,
            151
          ]
        },
        {
          "teal": 104,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            152
          ]
        },
        {
          "teal": 105,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            153
          ]
        },
        {
          "teal": 106,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            154
          ]
        },
        {
          "teal": 107,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            155
          ]
        },
        {
          "teal": 110,
          "source": "examples/simple/simple.algo.ts:18",
          "errorMessage": "argument 1 (a) for add must be a uint256",
          "pc": [
            156
          ]
        },
        {
          "teal": 113,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            157,
            158,
            159
          ]
        },
        {
          "teal": 114,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            160
          ]
        },
        {
          "teal": 115,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            161
          ]
        },
        {
          "teal": 116,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            162
          ]
        },
        {
          "teal": 117,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            163
          ]
        },
        {
          "teal": 120,
          "source": "examples/simple/simple.algo.ts:18",
          "errorMessage": "add return value overflowed 256 bits",
          "pc": [
            164
          ]
        },
        {
          "teal": 121,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            165
          ]
        },
        {
          "teal": 122,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            166
          ]
        },
        {
          "teal": 123,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            167
          ]
        },
        {
          "teal": 124,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            168
          ]
        },
        {
          "teal": 125,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            169
          ]
        },
        {
          "teal": 126,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            170
          ]
        },
        {
          "teal": 127,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            171
          ]
        },
        {
          "teal": 128,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            172
          ]
        },
        {
          "teal": 129,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            173
          ]
        },
        {
          "teal": 130,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            174
          ]
        },
        {
          "teal": 131,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            175
          ]
        },
        {
          "teal": 132,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            176
          ]
        },
        {
          "teal": 133,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            177
          ]
        },
        {
          "teal": 137,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            178,
            179,
            180
          ]
        },
        {
          "teal": 141,
          "source": "examples/simple/simple.algo.ts:19",
          "pc": [
            181,
            182
          ]
        },
        {
          "teal": 142,
          "source": "examples/simple/simple.algo.ts:19",
          "pc": [
            183,
            184
          ]
        },
        {
          "teal": 143,
          "source": "examples/simple/simple.algo.ts:19",
          "pc": [
            185
          ]
        },
        {
          "teal": 144,
          "source": "examples/simple/simple.algo.ts:18",
          "pc": [
            186
          ]
        },
        {
          "teal": 149,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            187
          ]
        },
        {
          "teal": 152,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            188,
            189,
            190
          ]
        },
        {
          "teal": 153,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            191
          ]
        },
        {
          "teal": 154,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            192
          ]
        },
        {
          "teal": 155,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            193
          ]
        },
        {
          "teal": 156,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            194
          ]
        },
        {
          "teal": 159,
          "source": "examples/simple/simple.algo.ts:22",
          "errorMessage": "argument 0 (b) for sub must be a uint256",
          "pc": [
            195
          ]
        },
        {
          "teal": 162,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            196,
            197,
            198
          ]
        },
        {
          "teal": 163,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            199
          ]
        },
        {
          "teal": 164,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            200
          ]
        },
        {
          "teal": 165,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            201
          ]
        },
        {
          "teal": 166,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            202
          ]
        },
        {
          "teal": 169,
          "source": "examples/simple/simple.algo.ts:22",
          "errorMessage": "argument 1 (a) for sub must be a uint256",
          "pc": [
            203
          ]
        },
        {
          "teal": 172,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            204,
            205,
            206
          ]
        },
        {
          "teal": 173,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            207
          ]
        },
        {
          "teal": 174,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            208
          ]
        },
        {
          "teal": 175,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            209
          ]
        },
        {
          "teal": 176,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            210
          ]
        },
        {
          "teal": 179,
          "source": "examples/simple/simple.algo.ts:22",
          "errorMessage": "sub return value overflowed 256 bits",
          "pc": [
            211
          ]
        },
        {
          "teal": 180,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            212
          ]
        },
        {
          "teal": 181,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            213
          ]
        },
        {
          "teal": 182,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            214
          ]
        },
        {
          "teal": 183,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            215
          ]
        },
        {
          "teal": 184,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            216
          ]
        },
        {
          "teal": 185,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            217
          ]
        },
        {
          "teal": 186,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            218
          ]
        },
        {
          "teal": 187,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            219
          ]
        },
        {
          "teal": 188,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            220
          ]
        },
        {
          "teal": 189,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            221
          ]
        },
        {
          "teal": 190,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            222
          ]
        },
        {
          "teal": 191,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            223
          ]
        },
        {
          "teal": 192,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            224
          ]
        },
        {
          "teal": 196,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            225,
            226,
            227
          ]
        },
        {
          "teal": 200,
          "source": "examples/simple/simple.algo.ts:23",
          "pc": [
            228,
            229
          ]
        },
        {
          "teal": 201,
          "source": "examples/simple/simple.algo.ts:23",
          "pc": [
            230,
            231
          ]
        },
        {
          "teal": 202,
          "source": "examples/simple/simple.algo.ts:23",
          "pc": [
            232
          ]
        },
        {
          "teal": 203,
          "source": "examples/simple/simple.algo.ts:22",
          "pc": [
            233
          ]
        },
        {
          "teal": 206,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            234
          ]
        },
        {
          "teal": 207,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            235
          ]
        },
        {
          "teal": 210,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            236,
            237,
            238,
            239,
            240,
            241
          ]
        },
        {
          "teal": 211,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            242,
            243,
            244
          ]
        },
        {
          "teal": 212,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            245,
            246,
            247,
            248
          ]
        },
        {
          "teal": 215,
          "source": "examples/simple/simple.algo.ts:3",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            249
          ]
        },
        {
          "teal": 218,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            250,
            251,
            252,
            253,
            254,
            255
          ]
        },
        {
          "teal": 219,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            256,
            257,
            258,
            259,
            260,
            261
          ]
        },
        {
          "teal": 220,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            262,
            263,
            264,
            265,
            266,
            267
          ]
        },
        {
          "teal": 221,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            268,
            269,
            270,
            271,
            272,
            273
          ]
        },
        {
          "teal": 222,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            274,
            275,
            276
          ]
        },
        {
          "teal": 223,
          "source": "examples/simple/simple.algo.ts:3",
          "pc": [
            277,
            278,
            279,
            280,
            281,
            282,
            283,
            284,
            285,
            286
          ]
        },
        {
          "teal": 226,
          "source": "examples/simple/simple.algo.ts:3",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            287
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAzMiAxIDI1NgpieXRlY2Jsb2NrIDB4NjM2Zjc1NmU3NDY1NzIgMHhGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGIDB4MTUxZjdjNzUKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA2LjEKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBpbmNyZW1lbnRDb3VudGVyKGk6IHVpbnQ2NCk6IHZvaWQKaW5jcmVtZW50Q291bnRlcjoKCXByb3RvIDEgMAoKCS8vIGV4YW1wbGVzL3NpbXBsZS9zaW1wbGUuYWxnby50czo3CgkvLyB0aGlzLmNvdW50ZXIudmFsdWUgPSB0aGlzLmNvdW50ZXIudmFsdWUgKyBpCglieXRlYyAwIC8vICAiY291bnRlciIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAtMSAvLyBpOiB1aW50NjQKCSsKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGluY3IodWludDY0KXZvaWQKKmFiaV9yb3V0ZV9pbmNyOgoJLy8gaTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBpbmNyKHVpbnQ2NCl2b2lkCgljYWxsc3ViIGluY3IKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGluY3IoaTogdWludDY0KTogdm9pZAppbmNyOgoJcHJvdG8gMSAwCgoJLy8gZXhhbXBsZXMvc2ltcGxlL3NpbXBsZS5hbGdvLnRzOjExCgkvLyB0aGlzLmluY3JlbWVudENvdW50ZXIoaSkKCWZyYW1lX2RpZyAtMSAvLyBpOiB1aW50NjQKCWNhbGxzdWIgaW5jcmVtZW50Q291bnRlcgoJcmV0c3ViCgovLyBkZWNyKHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfZGVjcjoKCS8vIGk6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgZGVjcih1aW50NjQpdm9pZAoJY2FsbHN1YiBkZWNyCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBkZWNyKGk6IHVpbnQ2NCk6IHZvaWQKZGVjcjoKCXByb3RvIDEgMAoKCS8vIGV4YW1wbGVzL3NpbXBsZS9zaW1wbGUuYWxnby50czoxNQoJLy8gdGhpcy5jb3VudGVyLnZhbHVlID0gdGhpcy5jb3VudGVyLnZhbHVlIC0gaQoJYnl0ZWMgMCAvLyAgImNvdW50ZXIiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTEgLy8gaTogdWludDY0CgktCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBhZGQodWludDI1Nix1aW50MjU2KXVpbnQyNTYKKmFiaV9yb3V0ZV9hZGQ6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCWJ5dGVjIDIgLy8gMHgxNTFmN2M3NQoKCS8vIGI6IHVpbnQyNTYKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWR1cAoJbGVuCglpbnRjIDAgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoYikgZm9yIGFkZCBtdXN0IGJlIGEgdWludDI1NgoJYXNzZXJ0CgoJLy8gYTogdWludDI1NgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgMCAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAxIChhKSBmb3IgYWRkIG11c3QgYmUgYSB1aW50MjU2Cglhc3NlcnQKCgkvLyBleGVjdXRlIGFkZCh1aW50MjU2LHVpbnQyNTYpdWludDI1NgoJY2FsbHN1YiBhZGQKCWR1cAoJYml0bGVuCglpbnRjIDIgLy8gMjU2Cgk8PQoKCS8vIGFkZCByZXR1cm4gdmFsdWUgb3ZlcmZsb3dlZCAyNTYgYml0cwoJYXNzZXJ0CglieXRlYyAxIC8vIDB4RkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRgoJYiYKCWR1cAoJbGVuCglkdXAKCWludGMgMCAvLyAzMgoJLQoJc3dhcAoJc3Vic3RyaW5nMwoJY29uY2F0Cglsb2cKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGFkZChhOiB1aW50MjU2LCBiOiB1aW50MjU2KTogdWludDI1NgphZGQ6Cglwcm90byAyIDEKCgkvLyBleGFtcGxlcy9zaW1wbGUvc2ltcGxlLmFsZ28udHM6MTkKCS8vIHJldHVybiBhICsgYjsKCWZyYW1lX2RpZyAtMSAvLyBhOiB1aW50MjU2CglmcmFtZV9kaWcgLTIgLy8gYjogdWludDI1NgoJYisKCXJldHN1YgoKLy8gc3ViKHVpbnQyNTYsdWludDI1Nil1aW50MjU2CiphYmlfcm91dGVfc3ViOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlYyAyIC8vIDB4MTUxZjdjNzUKCgkvLyBiOiB1aW50MjU2Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50YyAwIC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGIpIGZvciBzdWIgbXVzdCBiZSBhIHVpbnQyNTYKCWFzc2VydAoKCS8vIGE6IHVpbnQyNTYKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDAgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMSAoYSkgZm9yIHN1YiBtdXN0IGJlIGEgdWludDI1NgoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBzdWIodWludDI1Nix1aW50MjU2KXVpbnQyNTYKCWNhbGxzdWIgc3ViCglkdXAKCWJpdGxlbgoJaW50YyAyIC8vIDI1NgoJPD0KCgkvLyBzdWIgcmV0dXJuIHZhbHVlIG92ZXJmbG93ZWQgMjU2IGJpdHMKCWFzc2VydAoJYnl0ZWMgMSAvLyAweEZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkYKCWImCglkdXAKCWxlbgoJZHVwCglpbnRjIDAgLy8gMzIKCS0KCXN3YXAKCXN1YnN0cmluZzMKCWNvbmNhdAoJbG9nCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBzdWIoYTogdWludDI1NiwgYjogdWludDI1Nik6IHVpbnQyNTYKc3ViOgoJcHJvdG8gMiAxCgoJLy8gZXhhbXBsZXMvc2ltcGxlL3NpbXBsZS5hbGdvLnRzOjIzCgkvLyByZXR1cm4gYSAtIGI7CglmcmFtZV9kaWcgLTEgLy8gYTogdWludDI1NgoJZnJhbWVfZGlnIC0yIC8vIGI6IHVpbnQyNTYKCWItCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDEgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4OWZhYjg2MTAgLy8gbWV0aG9kICJpbmNyKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4MmUwYzVhNDcgLy8gbWV0aG9kICJkZWNyKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4YWM5NzZlMDIgLy8gbWV0aG9kICJhZGQodWludDI1Nix1aW50MjU2KXVpbnQyNTYiCglwdXNoYnl0ZXMgMHgwOTFiMzJhNyAvLyBtZXRob2QgInN1Yih1aW50MjU2LHVpbnQyNTYpdWludDI1NiIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfaW5jciAqYWJpX3JvdXRlX2RlY3IgKmFiaV9yb3V0ZV9hZGQgKmFiaV9yb3V0ZV9zdWIKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBleGFtcGxlcy9zaW1wbGUvc2ltcGxlLmFsZ28udHM6MjcKLy8gdGhpcy5pbmNyZW1lbnRDb3VudGVyKDEpCmludGNibG9jayAxCmJ5dGVjYmxvY2sgMHg2MzZmNzU2ZTc0NjU3MgppbnRjIDAgLy8gMQpjYWxsc3ViIGluY3JlbWVudENvdW50ZXIKaW50YyAwIC8vIDEKcmV0dXJuCgovLyBpbmNyZW1lbnRDb3VudGVyKGk6IHVpbnQ2NCk6IHZvaWQKaW5jcmVtZW50Q291bnRlcjoKCXByb3RvIDEgMAoKCS8vIGV4YW1wbGVzL3NpbXBsZS9zaW1wbGUuYWxnby50czo3CgkvLyB0aGlzLmNvdW50ZXIudmFsdWUgPSB0aGlzLmNvdW50ZXIudmFsdWUgKyBpCglieXRlYyAwIC8vICAiY291bnRlciIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAtMSAvLyBpOiB1aW50NjQKCSsKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWI="
  },
  "byteCode": {
    "approval": "CiADIAGAAiYDB2NvdW50ZXIg//////////////////////////////////////////8EFR98dTEYFIEGCzEZCI0MAKAAAAAAAAAAAAAAAJIAAAAAAAAAAAAAAIoBAChJZIv/CGeJNhoBF4gAAiNDigEAi/+I/+SJNhoBF4gAAiNDigEAKElki/8JZ4kqNhoCSRUiEkQ2GgFJFSISRIgAEkmTJA5EKaxJFUkiCUxSULAjQ4oCAYv/i/6giSo2GgJJFSISRDYaAUkVIhJEiAASSZMkDkQprEkVSSIJTFJQsCNDigIBi/+L/qGJI0OABLhEezY2GgCOAf/xAIAEn6uGEIAELgxaR4AErJduAoAECRsypzYaAI4E/0f/Wf9t/5wA",
    "clear": "CiABASYBB2NvdW50ZXIiiAACIkOKAQAoSWSL/whniQ=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}