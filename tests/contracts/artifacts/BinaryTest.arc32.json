{
  "hints": {
    "and(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "or(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "equal(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "notEqual(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitAnd(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitOr(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitXor(uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "combo(uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitwiseXorOp(byte[],byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitwiseAndOp(byte[],byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitwiseOrOp(byte[],byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bitwiseNotOp(byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "BinaryTest",
    "desc": "",
    "methods": [
      {
        "name": "and",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "or",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "equal",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "notEqual",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitAnd",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitOr",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitXor",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "combo",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "uint64"
          },
          {
            "name": "c",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitwiseXorOp",
        "args": [
          {
            "name": "a",
            "type": "byte[]"
          },
          {
            "name": "b",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitwiseAndOp",
        "args": [
          {
            "name": "a",
            "type": "byte[]"
          },
          {
            "name": "b",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitwiseOrOp",
        "args": [
          {
            "name": "a",
            "type": "byte[]"
          },
          {
            "name": "b",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bitwiseNotOp",
        "args": [
          {
            "name": "a",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}