{
  "name": "MultiInheritanceProgram",
  "desc": "",
  "methods": [
    {
      "name": "prog",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/inheritance.algo.ts:99",
          "pc": [
            40,
            41,
            42
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/inheritance.algo.ts:99",
          "pc": [
            43
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/inheritance.algo.ts:99",
          "pc": [
            44
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/inheritance.algo.ts:99",
          "pc": [
            45,
            46,
            47
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/inheritance.algo.ts:100",
          "pc": [
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            248,
            249,
            250,
            251,
            252,
            253,
            254,
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264,
            265,
            266,
            267,
            268,
            269,
            270,
            271,
            272,
            273,
            274,
            275,
            276,
            277,
            278,
            279,
            280,
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297,
            298,
            299,
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/inheritance.algo.ts:100",
          "pc": [
            317
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/inheritance.algo.ts:99",
          "pc": [
            318
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            319
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            320
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            321,
            322,
            323,
            324,
            325,
            326
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            327,
            328,
            329
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            330,
            331,
            332,
            333
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            334
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            335,
            336,
            337,
            338,
            339,
            340
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            341,
            342,
            343
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "pc": [
            344,
            345,
            346,
            347
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/inheritance.algo.ts:98",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            348
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNi4yCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gcHJvZygpdm9pZAoqYWJpX3JvdXRlX3Byb2c6CgkvLyBleGVjdXRlIHByb2coKXZvaWQKCWNhbGxzdWIgcHJvZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gcHJvZygpOiB2b2lkCnByb2c6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czoxMDAKCS8vIGxvZyhNdWx0aUluaGVyaXRhbmNlLmFwcHJvdmFsUHJvZ3JhbSgpKQoJcHVzaGJ5dGVzIDB4MGEyMDAyMDFiOTBhMjYwMTAxNjEzMTE4MTQ4MTA2MGIzMTE5MDg4ZDBjMDBiNzAwMDAwMDAwMDAwMDAwMDAwMDAwMDBhOTAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4ODAwMDIyMjQzOGEwMDAwMjgyMzY3ODk4ODAwMDIyMjQzOGEwMDAwMjg2NDIzMTI0NDgwMDE2MjgxMmE2Nzg5ODgwMDAyMjI0MzhhMDAwMDgwMDI2MjMyYjA4OTg4MDAwMjIyNDM4YTAwMDA4MDZjMGEyMDAxMDEzMTE4MTQ4MTA2MGIzMTE5MDg4ZDBjMDAyZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4ODAwMDIyMjQzOGEwMDAwODAwMTYxODFiOTBhNjc4OTg4MDAwMjIyNDM4YTAwMDA4MDAyNjIzMmIwODkyMjQzODAwNGI4NDQ3YjM2MzYxYTAwOGUwMWZmZjEwMDgwMDQxZTdhYWQxYzgwMDQ0NDNiMzMxOTM2MWEwMDhlMDJmZmJkZmZjZDAwYjA4OTIyNDM4MDA0Yjg0NDdiMzYzNjFhMDA4ZTAxZmZmMTAwODAwNDFlN2FhZDFjODAwNDNhYzkwYjA4ODAwNDQ0M2IzMzE5ODAwNDg0NDY3YWZmMzYxYTAwOGUwNGZmMjVmZjMxZmY0NWZmNTMwMAoJbG9nCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4ODFkNzliZWYgLy8gbWV0aG9kICJwcm9nKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9wcm9nCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MASgAAAAAAAAAAAAAARoAAAAAAAAAAAAAAIgAAiJDigAAgIoCCiACAbkKJgEBYTEYFIEGCzEZCI0MALcAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAIgAAiJDigAAKCNniYgAAiJDigAAKGQjEkSAAWKBKmeJiAACIkOKAACAAmIysImIAAIiQ4oAAIBsCiABATEYFIEGCzEZCI0MAC8AAAAAAAAAAAAAACEAAAAAAAAAAAAAAIgAAiJDigAAgAFhgbkKZ4mIAAIiQ4oAAIACYjKwiSJDgAS4RHs2NhoAjgH/8QCABB56rRyABEQ7Mxk2GgCOAv+9/80AsIkiQ4AEuER7NjYaAI4B//EAgAQeeq0cgAQ6yQsIgAREOzMZgASERnr/NhoAjgT/Jf8x/0X/UwCwiSJDgAS4RHs2NhoAjgH/8QCABIHXm+82GgCOAf7MAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}