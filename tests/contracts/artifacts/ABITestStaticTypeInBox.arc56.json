{
  "name": "ABITestStaticTypeInBox",
  "desc": "",
  "methods": [
    {
      "name": "staticTypeInBox",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "bMap": {
          "keyType": "address",
          "valueType": "address"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:1531",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:1534",
          "pc": [
            40,
            41,
            42
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1534",
          "pc": [
            43
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:1534",
          "pc": [
            44
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1534",
          "pc": [
            45,
            46,
            47
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:1535",
          "pc": [
            48,
            49
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:1535",
          "pc": [
            50,
            51
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1535",
          "pc": [
            52
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1536",
          "pc": [
            53,
            54
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1536",
          "pc": [
            55
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1536",
          "errorMessage": "box value does not exist: this.bMap(this.txn.sender).value",
          "pc": [
            56
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1536",
          "pc": [
            57,
            58
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1536",
          "pc": [
            59
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1536",
          "pc": [
            60
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:1536",
          "pc": [
            61
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:1534",
          "pc": [
            62
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            63
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            64
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            65,
            66,
            67,
            68,
            69,
            70
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            74,
            75,
            76,
            77
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1531",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            78
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            79,
            80,
            81,
            82,
            83,
            84
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            85,
            86,
            87
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1531",
          "pc": [
            88,
            89,
            90,
            91
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:1531",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            92
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNy4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gc3RhdGljVHlwZUluQm94KCl2b2lkCiphYmlfcm91dGVfc3RhdGljVHlwZUluQm94OgoJLy8gZXhlY3V0ZSBzdGF0aWNUeXBlSW5Cb3goKXZvaWQKCWNhbGxzdWIgc3RhdGljVHlwZUluQm94CglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBzdGF0aWNUeXBlSW5Cb3goKTogdm9pZApzdGF0aWNUeXBlSW5Cb3g6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTUzNQoJLy8gdGhpcy5iTWFwKHRoaXMudHhuLnNlbmRlcikudmFsdWUgPSB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCXR4biBTZW5kZXIKCWJveF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTUzNgoJLy8gYXNzZXJ0KHRoaXMuYk1hcCh0aGlzLnR4bi5zZW5kZXIpLnZhbHVlLmlzSW5MZWRnZXIpCgl0eG4gU2VuZGVyCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLmJNYXAodGhpcy50eG4uc2VuZGVyKS52YWx1ZQoJYXNzZXJ0CglhY2N0X3BhcmFtc19nZXQgQWNjdEJhbGFuY2UKCXN3YXAKCXBvcAoJYXNzZXJ0CglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4MGY1MjA3ZDkgLy8gbWV0aG9kICJzdGF0aWNUeXBlSW5Cb3goKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX3N0YXRpY1R5cGVJbkJveAoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MACgAAAAAAAAAAAAAABoAAAAAAAAAAAAAAIgAAiJDigAAMQAxAL8xAL5EcwBMSESJIkOABLhEezY2GgCOAf/xAIAED1IH2TYaAI4B/8wA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 1,
      "patch": 2,
      "commitHash": "088f89dd"
    }
  }
}