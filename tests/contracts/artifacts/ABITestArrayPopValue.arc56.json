{
  "name": "ABITestArrayPopValue",
  "desc": "",
  "methods": [
    {
      "name": "arrayPopValue",
      "args": [],
      "returns": {
        "type": "uint16"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            5,
            6,
            7
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            14,
            15
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            16
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:447",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            43
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            44,
            45,
            46,
            47,
            48,
            49
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            50,
            51,
            52
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            53
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            54
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            55
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            56,
            57
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            58
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:448",
          "errorMessage": "arrayPopValue return value overflowed 16 bits",
          "pc": [
            59
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            60,
            61,
            62
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            63
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            64
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            65
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            66
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            70
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            71
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:449",
          "pc": [
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:449",
          "pc": [
            80,
            81
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            82,
            83
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            84
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            85
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            86
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            87
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            88,
            89
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            90
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            91
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            92
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            93
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            94
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            95,
            96
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            97,
            98
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            99
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            100
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            101,
            102
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            103
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:451",
          "pc": [
            104,
            105
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:453",
          "pc": [
            106,
            107
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            108,
            109
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:448",
          "pc": [
            112
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            113
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            114
          ]
        },
        {
          "teal": 98,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            115,
            116,
            117,
            118,
            119,
            120
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            121,
            122,
            123
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            124,
            125,
            126,
            127
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:447",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            128
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            129,
            130,
            131,
            132,
            133,
            134
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            135,
            136,
            137
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/abi.algo.ts:447",
          "pc": [
            138,
            139,
            140,
            141
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/abi.algo.ts:447",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            142
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDIKYnl0ZWNibG9jayAweAoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMgovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGFycmF5UG9wVmFsdWUoKXVpbnQxNgoqYWJpX3JvdXRlX2FycmF5UG9wVmFsdWU6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCXB1c2hieXRlcyAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBhcnJheVBvcFZhbHVlKCl1aW50MTYKCWNhbGxzdWIgYXJyYXlQb3BWYWx1ZQoJaXRvYgoJZHVwCgliaXRsZW4KCXB1c2hpbnQgMTYKCTw9CgoJLy8gYXJyYXlQb3BWYWx1ZSByZXR1cm4gdmFsdWUgb3ZlcmZsb3dlZCAxNiBiaXRzCglhc3NlcnQKCWV4dHJhY3QgNiAyCgljb25jYXQKCWxvZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gYXJyYXlQb3BWYWx1ZSgpOiB1aW50MTYKYXJyYXlQb3BWYWx1ZToKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAwIC8vIDB4CglkdXAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6NDQ5CgkvLyBhOiB1aW50MTZbXSA9IFsxLCAyLCAzXQoJcHVzaGJ5dGVzIDB4MDAwMTAwMDIwMDAzCglmcmFtZV9idXJ5IDAgLy8gYTogdWludDE2W10KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6NDUxCgkvLyB2ID0gYS5wb3AoKSEKCWZyYW1lX2RpZyAwIC8vIGE6IHVpbnQxNltdCglkdXAKCWxlbgoJaW50YyAxIC8vIDIKCS0KCXB1c2hpbnQgMAoJc3dhcAoJZXh0cmFjdDMKCWR1cAoJbGVuCglpbnRjIDEgLy8gMgoJZnJhbWVfZGlnIDAgLy8gYTogdWludDE2W10KCWNvdmVyIDIKCWV4dHJhY3QzCglzd2FwCglmcmFtZV9idXJ5IDAgLy8gYTogdWludDE2W10KCWJ0b2kKCWZyYW1lX2J1cnkgMSAvLyB2OiB1aW50MTYKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6NDUzCgkvLyByZXR1cm4gdjsKCWZyYW1lX2RpZyAxIC8vIHY6IHVpbnQxNgoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoKCS8vIHBvcCBhbGwgbG9jYWwgdmFyaWFibGVzIGZyb20gdGhlIHN0YWNrCglwb3BuIDEKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMCAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgxODBkM2ZiNCAvLyBtZXRob2QgImFycmF5UG9wVmFsdWUoKXVpbnQxNiIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYXJyYXlQb3BWYWx1ZQoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAQImAQAxGBSBBgsxGQiNDABWAAAAAAAAAAAAAABIAAAAAAAAAAAAAACABBUffHWIAA4WSZOBEA5EVwYCULAiQ4oAAShJgAYAAQACAAOMAIsASRUjCYEATFhJFSOLAE4CWEyMABeMAYsBjABGAYkiQ4AEuER7NjYaAI4B//EAgAQYDT+0NhoAjgH/ngA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}