{
  "name": "ABITestStorageTypeHint",
  "desc": "",
  "methods": [
    {
      "name": "partialStaticArray",
      "args": [],
      "returns": {
        "type": "uint16[3]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 1,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "gKey": {
          "key": "Z0tleQ==",
          "keyType": "AVMBytes",
          "valueType": "uint16[3]"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            13
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            14,
            15
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            16
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            17,
            18
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            19
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:856",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            46
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            47,
            48,
            49,
            50,
            51,
            52
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            53,
            54,
            55
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            56
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            57
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            58
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            59
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            60,
            61,
            62
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:860",
          "pc": [
            63
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:860",
          "pc": [
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:860",
          "pc": [
            72
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:862",
          "pc": [
            73
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:862",
          "pc": [
            74
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:859",
          "pc": [
            75
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            76
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            77
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            78,
            79,
            80,
            81,
            82,
            83
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            84,
            85,
            86
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            87,
            88,
            89,
            90
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:856",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            91
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            92,
            93,
            94,
            95,
            96,
            97
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            98,
            99,
            100
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:856",
          "pc": [
            101,
            102,
            103,
            104
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:856",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            105
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCmJ5dGVjYmxvY2sgMHg2NzRiNjU3OQoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMwovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIHBhcnRpYWxTdGF0aWNBcnJheSgpdWludDE2WzNdCiphYmlfcm91dGVfcGFydGlhbFN0YXRpY0FycmF5OgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgcGFydGlhbFN0YXRpY0FycmF5KCl1aW50MTZbM10KCWNhbGxzdWIgcGFydGlhbFN0YXRpY0FycmF5Cgljb25jYXQKCWxvZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gcGFydGlhbFN0YXRpY0FycmF5KCk6IFN0YXRpY0FycmF5PHVpbnQxNiwgMz4KcGFydGlhbFN0YXRpY0FycmF5OgoJcHJvdG8gMCAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjg2MAoJLy8gdGhpcy5nS2V5LnZhbHVlID0gWzEsIDIsIDNdCglieXRlYyAwIC8vICAiZ0tleSIKCXB1c2hieXRlcyAweDAwMDEwMDAyMDAwMwoJYXBwX2dsb2JhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6ODYyCgkvLyByZXR1cm4gdGhpcy5nS2V5LnZhbHVlOwoJYnl0ZWMgMCAvLyAgImdLZXkiCglhcHBfZ2xvYmFsX2dldAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50YyAwIC8vIDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweGQyOTRkYzE0IC8vIG1ldGhvZCAicGFydGlhbFN0YXRpY0FycmF5KCl1aW50MTZbM10iCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX3BhcnRpYWxTdGF0aWNBcnJheQoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABASYBBGdLZXkxGBSBBgsxGQiNDAAuAAAAAAAAAAAAAAAgAAAAAAAAAAAAAACABBUffHWIAARQsCJDigABKIAGAAEAAgADZyhkiSJDgAS4RHs2NhoAjgH/8QCABNKU3BQ2GgCOAf/GAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 1,
      "patch": 2,
      "commitHash": "088f89dd"
    }
  }
}