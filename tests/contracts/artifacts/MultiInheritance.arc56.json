{
  "name": "MultiInheritance",
  "desc": "",
  "methods": [
    {
      "name": "a",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "b",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "b2",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "foo",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 2
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "aKey": {
          "key": "YQ==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "bKey": {
          "key": "Yg==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            6,
            7,
            8,
            9
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            12
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            13,
            14
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            15
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            16,
            17
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            18
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            45
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            46,
            47,
            48
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            49
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            50
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            51,
            52,
            53
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            54
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            55
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/inheritance.algo.ts:16",
          "pc": [
            56
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/inheritance.algo.ts:15",
          "pc": [
            57
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            58,
            59,
            60
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            61
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            62
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            63,
            64,
            65
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            66
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            67
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            68
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            69
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/inheritance.algo.ts:24",
          "pc": [
            70
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            74,
            75
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/inheritance.algo.ts:25",
          "pc": [
            76
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/inheritance.algo.ts:23",
          "pc": [
            77
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/inheritance.algo.ts:87",
          "pc": [
            78,
            79,
            80
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/inheritance.algo.ts:87",
          "pc": [
            81
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/inheritance.algo.ts:87",
          "pc": [
            82
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/inheritance.algo.ts:87",
          "pc": [
            83,
            84,
            85
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/inheritance.algo.ts:88",
          "pc": [
            86,
            87,
            88,
            89
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/inheritance.algo.ts:88",
          "pc": [
            90
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/inheritance.algo.ts:87",
          "pc": [
            91
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/inheritance.algo.ts:93",
          "pc": [
            92,
            93,
            94
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/inheritance.algo.ts:93",
          "pc": [
            95
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/inheritance.algo.ts:93",
          "pc": [
            96
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/inheritance.algo.ts:93",
          "pc": [
            97,
            98,
            99
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/inheritance.algo.ts:94",
          "pc": [
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/inheritance.algo.ts:94",
          "pc": [
            210
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/inheritance.algo.ts:93",
          "pc": [
            211
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            212
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            213
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            214,
            215,
            216,
            217,
            218,
            219
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            220,
            221,
            222
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            223,
            224,
            225,
            226
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            227
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            228,
            229,
            230,
            231,
            232,
            233
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            234,
            235,
            236,
            237,
            238,
            239
          ]
        },
        {
          "teal": 120,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            240,
            241,
            242,
            243,
            244,
            245
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            246,
            247,
            248,
            249,
            250,
            251
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            252,
            253,
            254
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "pc": [
            255,
            256,
            257,
            258,
            259,
            260,
            261,
            262,
            263,
            264
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/inheritance.algo.ts:92",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            265
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDEzMzcKYnl0ZWNibG9jayAweDYxCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNi4zCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYSgpdm9pZAoqYWJpX3JvdXRlX2E6CgkvLyBleGVjdXRlIGEoKXZvaWQKCWNhbGxzdWIgYQoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gYSgpOiB2b2lkCmE6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czoxNgoJLy8gdGhpcy5hS2V5LnZhbHVlID0gMTMzNwoJYnl0ZWMgMCAvLyAgImEiCglpbnRjIDEgLy8gMTMzNwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gYigpdm9pZAoqYWJpX3JvdXRlX2I6CgkvLyBleGVjdXRlIGIoKXZvaWQKCWNhbGxzdWIgYgoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gYigpOiB2b2lkCmI6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czoyNAoJLy8gYXNzZXJ0KHRoaXMuYUtleS52YWx1ZSA9PT0gMTMzNykKCWJ5dGVjIDAgLy8gICJhIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAxMzM3Cgk9PQoJYXNzZXJ0CgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6MjUKCS8vIHRoaXMuYktleS52YWx1ZSA9IDQyCglwdXNoYnl0ZXMgMHg2MiAvLyAiYiIKCXB1c2hpbnQgNDIKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGIyKCl2b2lkCiphYmlfcm91dGVfYjI6CgkvLyBleGVjdXRlIGIyKCl2b2lkCgljYWxsc3ViIGIyCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBiMigpOiB2b2lkCmIyOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2luaGVyaXRhbmNlLmFsZ28udHM6ODgKCS8vIGxvZygnYjInKQoJcHVzaGJ5dGVzIDB4NjIzMiAvLyAiYjIiCglsb2cKCXJldHN1YgoKLy8gZm9vKCl2b2lkCiphYmlfcm91dGVfZm9vOgoJLy8gZXhlY3V0ZSBmb28oKXZvaWQKCWNhbGxzdWIgZm9vCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBmb28oKTogdm9pZApmb286Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvaW5oZXJpdGFuY2UuYWxnby50czo5NAoJLy8gbG9nKEIyLmFwcHJvdmFsUHJvZ3JhbSgpKQoJcHVzaGJ5dGVzIDB4MGEyMDAxMDEzMTE4MTQ4MTA2MGIzMTE5MDg4ZDBjMDAyZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4ODAwMDIyMjQzOGEwMDAwODAwMTYxODFiOTBhNjc4OTg4MDAwMjIyNDM4YTAwMDA4MDAyNjIzMmIwODkyMjQzODAwNGI4NDQ3YjM2MzYxYTAwOGUwMWZmZjEwMDgwMDQxZTdhYWQxYzgwMDQ0NDNiMzMxOTM2MWEwMDhlMDJmZmJkZmZjZDAwCglsb2cKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMCAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgxZTdhYWQxYyAvLyBtZXRob2QgImEoKXZvaWQiCglwdXNoYnl0ZXMgMHgzYWM5MGIwOCAvLyBtZXRob2QgImIoKXZvaWQiCglwdXNoYnl0ZXMgMHg0NDNiMzMxOSAvLyBtZXRob2QgImIyKCl2b2lkIgoJcHVzaGJ5dGVzIDB4ODQ0NjdhZmYgLy8gbWV0aG9kICJmb28oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2EgKmFiaV9yb3V0ZV9iICphYmlfcm91dGVfYjIgKmFiaV9yb3V0ZV9mb28KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAbkKJgEBYTEYFIEGCzEZCI0MALcAAAAAAAAAAAAAAKkAAAAAAAAAAAAAAIgAAiJDigAAKCNniYgAAiJDigAAKGQjEkSAAWKBKmeJiAACIkOKAACAAmIysImIAAIiQ4oAAIBsCiABATEYFIEGCzEZCI0MAC8AAAAAAAAAAAAAACEAAAAAAAAAAAAAAIgAAiJDigAAgAFhgbkKZ4mIAAIiQ4oAAIACYjKwiSJDgAS4RHs2NhoAjgH/8QCABB56rRyABEQ7Mxk2GgCOAv+9/80AsIkiQ4AEuER7NjYaAI4B//EAgAQeeq0cgAQ6yQsIgAREOzMZgASERnr/NhoAjgT/Jf8x/0X/UwA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}