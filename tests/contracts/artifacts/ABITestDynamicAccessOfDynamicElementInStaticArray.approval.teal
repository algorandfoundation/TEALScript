#pragma version 10
intcblock 1 2

// This TEAL was generated by TEALScript v0.107.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// dynamicAccessOfDynamicElementInStaticArray(string[3])string
*abi_route_dynamicAccessOfDynamicElementInStaticArray:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// a: string[3]
	txna ApplicationArgs 1

	// execute dynamicAccessOfDynamicElementInStaticArray(string[3])string
	callsub dynamicAccessOfDynamicElementInStaticArray
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	intc 0 // 1
	return

// dynamicAccessOfDynamicElementInStaticArray(a: StaticArray<string, 3>): string
dynamicAccessOfDynamicElementInStaticArray:
	proto 1 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	pushbytes 0x

	// tests/contracts/abi.algo.ts:651
	// i = btoi(itob(1))
	intc 0 // 1
	frame_bury 0 // i: uint64

	// tests/contracts/abi.algo.ts:652
	// return a[i];
	frame_dig -1 // a: StaticArray<string, 3>
	store 255 // full array
	pushint 0 // initial offset
	frame_dig 0 // i: uint64
	intc 1 // 2
	* // acc * 2
	+
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 0 //  get type length
	* // multiply by type length
	intc 1 // 2
	+ // add two for length
	extract3
	extract 2 0

	// set the subroutine return value
	frame_bury 0
	retsub

*abi_route_createApplication:
	intc 0 // 1
	return

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x5aa0f316 // method "dynamicAccessOfDynamicElementInStaticArray(string[3])string"
	txna ApplicationArgs 0
	match *abi_route_dynamicAccessOfDynamicElementInStaticArray

	// this contract does not implement the given ABI method for call NoOp
	err