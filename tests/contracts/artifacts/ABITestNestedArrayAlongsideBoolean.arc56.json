{
  "name": "ABITestNestedArrayAlongsideBoolean",
  "desc": "",
  "methods": [
    {
      "name": "nestedArrayAlongsideBoolean",
      "args": [],
      "returns": {
        "type": "(byte[4][],uint64,uint64,uint64,bool)",
        "struct": "T10"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "T10": [
      {
        "name": "bytes4Array",
        "type": "byte[4][]"
      },
      {
        "name": "u64a",
        "type": "uint64"
      },
      {
        "name": "u64b",
        "type": "uint64"
      },
      {
        "name": "u64c",
        "type": "uint64"
      },
      {
        "name": "boolValue",
        "type": "bool"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 1,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {
        "gMap": {
          "keyType": "AVMBytes",
          "valueType": "T10"
        }
      },
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            5,
            6,
            7
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            14,
            15
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            16
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:1699",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            43
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            44,
            45,
            46,
            47,
            48,
            49
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            50,
            51,
            52
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            53
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            54
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            55
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            56
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            57,
            58,
            59
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            60
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            61
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            62
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            63,
            64,
            65,
            66
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1704",
          "pc": [
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1704",
          "pc": [
            79,
            80,
            81
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1705",
          "pc": [
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1705",
          "pc": [
            92,
            93,
            94
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1706",
          "pc": [
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1706",
          "pc": [
            105,
            106,
            107
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:1707",
          "pc": [
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:1707",
          "pc": [
            118,
            119,
            120
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:1708",
          "pc": [
            121,
            122,
            123
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1708",
          "pc": [
            124
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1708",
          "pc": [
            125
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1708",
          "pc": [
            126
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            127,
            128,
            129
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            130
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            131
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1703",
          "pc": [
            132,
            133
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:1711",
          "pc": [
            134,
            135
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            136,
            137
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1702",
          "pc": [
            138
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            139
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            140
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            141,
            142,
            143,
            144,
            145,
            146
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            147,
            148,
            149
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            150,
            151,
            152,
            153
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:1699",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            154
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            155,
            156,
            157,
            158,
            159,
            160
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            161,
            162,
            163
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            164,
            165,
            166,
            167
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/abi.algo.ts:1699",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            168
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            169,
            170,
            171
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            172,
            173
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            174,
            175
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            176
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            177,
            178
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            179,
            180
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            181
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            182,
            183,
            184
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            185,
            186
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            187,
            188
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            189
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            190,
            191
          ]
        },
        {
          "teal": 117,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            192,
            193
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            194
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            195
          ]
        },
        {
          "teal": 120,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            196,
            197
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            198
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            199
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            200
          ]
        },
        {
          "teal": 124,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            201,
            202,
            203
          ]
        },
        {
          "teal": 125,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            204,
            205
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            206,
            207
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            208
          ]
        },
        {
          "teal": 128,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            209
          ]
        },
        {
          "teal": 129,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            210,
            211
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            212,
            213
          ]
        },
        {
          "teal": 131,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            214,
            215
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            216,
            217
          ]
        },
        {
          "teal": 133,
          "source": "tests/contracts/abi.algo.ts:1699",
          "pc": [
            218
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAwIDEKYnl0ZWNibG9jayAweAoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMgovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIG5lc3RlZEFycmF5QWxvbmdzaWRlQm9vbGVhbigpKGJ5dGVbNF1bXSx1aW50NjQsdWludDY0LHVpbnQ2NCxib29sKQoqYWJpX3JvdXRlX25lc3RlZEFycmF5QWxvbmdzaWRlQm9vbGVhbjoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJcHVzaGJ5dGVzIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIG5lc3RlZEFycmF5QWxvbmdzaWRlQm9vbGVhbigpKGJ5dGVbNF1bXSx1aW50NjQsdWludDY0LHVpbnQ2NCxib29sKQoJY2FsbHN1YiBuZXN0ZWRBcnJheUFsb25nc2lkZUJvb2xlYW4KCWNvbmNhdAoJbG9nCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBuZXN0ZWRBcnJheUFsb25nc2lkZUJvb2xlYW4oKTogVDEwCm5lc3RlZEFycmF5QWxvbmdzaWRlQm9vbGVhbjoKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAwIC8vIDB4CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE3MDMKCS8vIG86IFQxMCA9IHsKCS8vICAgICAgIGJ5dGVzNEFycmF5OiBbJ2FiY2QnIGFzIGJ5dGVzPDQ+LCAnZWZnaCcgYXMgYnl0ZXM8ND5dLAoJLy8gICAgICAgdTY0YTogMSwKCS8vICAgICAgIHU2NGI6IDIsCgkvLyAgICAgICB1NjRjOiAzLAoJLy8gICAgICAgYm9vbFZhbHVlOiBmYWxzZSwKCS8vICAgICB9CglieXRlYyAwIC8vICBpbml0aWFsIGhlYWQKCWJ5dGVjIDAgLy8gIGluaXRpYWwgdGFpbAoJcHVzaGJ5dGVzIDB4MDAxYiAvLyBpbml0aWFsIGhlYWQgb2Zmc2V0CglwdXNoYnl0ZXMgMHgwMDAyNjE2MjYzNjQ2NTY2Njc2OAoJY2FsbHN1YiAqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQKCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDEKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDIKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDMKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXB1c2hieXRlcyAweDAwCglpbnRjIDAgLy8gMAoJZHVwCglzZXRiaXQKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXBvcCAvLyBwb3AgaGVhZCBvZmZzZXQKCWNvbmNhdCAvLyBjb25jYXQgaGVhZCBhbmQgdGFpbAoJZnJhbWVfYnVyeSAwIC8vIG86IFQxMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxNzExCgkvLyByZXR1cm4gbzsKCWZyYW1lX2RpZyAwIC8vIG86IFQxMAoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50YyAxIC8vIDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweGM0OWNiOWE3IC8vIG1ldGhvZCAibmVzdGVkQXJyYXlBbG9uZ3NpZGVCb29sZWFuKCkoYnl0ZVs0XVtdLHVpbnQ2NCx1aW50NjQsdWludDY0LGJvb2wpIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9uZXN0ZWRBcnJheUFsb25nc2lkZUJvb2xlYW4KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnIKCipwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50OgoJcHJvdG8gNCAzCglmcmFtZV9kaWcgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0xIC8vIGVsZW1lbnQKCWNvbmNhdAoJZnJhbWVfZGlnIC0zIC8vIHR1cGxlIHRhaWwKCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJcmV0c3ViCgoqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQ6Cglwcm90byA0IDMKCWZyYW1lX2RpZyAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCWNvbmNhdAoJZnJhbWVfYnVyeSAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTEgLy8gZWxlbWVudAoJZHVwCglsZW4KCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJYnRvaQoJKwoJaXRvYgoJZXh0cmFjdCA2IDIKCWZyYW1lX2J1cnkgLTIgLy8gaGVhZCBvZmZzZXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglzd2FwCgljb25jYXQKCWZyYW1lX2J1cnkgLTMgLy8gdHVwbGUgdGFpbAoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1Yg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAAEmAQAxGBSBBgsxGQiNDABwAAAAAAAAAAAAAABiAAAAAAAAAAAAAACABBUffHWIAARQsCNDigABKCgogAIAG4AKAAJhYmNkZWZnaIgAZIAIAAAAAAAAAAGIAEqACAAAAAAAAAACiAA9gAgAAAAAAAAAA4gAMIABACJJVIgAJ0hQjACLAIwAiSNDgAS4RHs2NhoAjgH/8QCABMScuac2GgCOAf+EAIoEA4v8i/9Qi/2L/omKBAOL/Iv+UIz8i/9JFYv+FwgWVwYCjP6L/UxQjP2L/Iv9i/6J",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}