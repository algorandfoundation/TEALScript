{
  "name": "ABITestBooleanLastInObj",
  "desc": "",
  "methods": [
    {
      "name": "booleanLastInObj",
      "args": [],
      "returns": {
        "type": "(uint64,bool)",
        "struct": "{ n: uint64; b: boolean; }"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ n: uint64; b: boolean; }": [
      {
        "name": "n",
        "type": "uint64"
      },
      {
        "name": "b",
        "type": "bool"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            5,
            6
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            7
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            10
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            13
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:1263",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            40
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            41,
            42,
            43,
            44,
            45,
            46
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            47,
            48,
            49
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            50
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            51
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            52
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            53
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            54,
            55,
            56
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1266",
          "pc": [
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1267",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1267",
          "pc": [
            70
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1267",
          "pc": [
            71
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1267",
          "pc": [
            72
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1265",
          "pc": [
            73
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:1264",
          "pc": [
            74
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            75
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            76
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            77,
            78,
            79,
            80,
            81,
            82
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            83,
            84,
            85
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            86,
            87,
            88,
            89
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:1263",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            90
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            91,
            92,
            93,
            94,
            95,
            96
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            97,
            98,
            99
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1263",
          "pc": [
            100,
            101,
            102,
            103
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:1263",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            104
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAwIDEKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA2LjMKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBib29sZWFuTGFzdEluT2JqKCkodWludDY0LGJvb2wpCiphYmlfcm91dGVfYm9vbGVhbkxhc3RJbk9iajoKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJcHVzaGJ5dGVzIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIGJvb2xlYW5MYXN0SW5PYmooKSh1aW50NjQsYm9vbCkKCWNhbGxzdWIgYm9vbGVhbkxhc3RJbk9iagoJY29uY2F0Cglsb2cKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGJvb2xlYW5MYXN0SW5PYmooKTogeyBuOiB1aW50NjQ7IGI6IGJvb2xlYW4gfQpib29sZWFuTGFzdEluT2JqOgoJcHJvdG8gMCAxCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjEyNjUKCS8vIHJldHVybiB7CgkvLyAgICAgICBuOiAxLAoJLy8gICAgICAgYjogZmFsc2UsCgkvLyAgICAgfTsKCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDEKCXB1c2hieXRlcyAweDAwCglpbnRjIDAgLy8gMAoJZHVwCglzZXRiaXQKCWNvbmNhdAoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50YyAxIC8vIDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweDY2Yzg5MGNhIC8vIG1ldGhvZCAiYm9vbGVhbkxhc3RJbk9iaigpKHVpbnQ2NCxib29sKSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbGVhbkxhc3RJbk9iagoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAAExGBSBBgsxGQiNDAAzAAAAAAAAAAAAAAAlAAAAAAAAAAAAAACABBUffHWIAARQsCNDigABgAgAAAAAAAAAAYABACJJVFCJI0OABLhEezY2GgCOAf/xAIAEZsiQyjYaAI4B/8EA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 1,
      "patch": 2,
      "commitHash": "088f89dd"
    }
  }
}