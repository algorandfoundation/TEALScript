{
  "name": "ABITestStaticStringArrayArg",
  "desc": "",
  "methods": [
    {
      "name": "staticStringArrayArg",
      "args": [
        {
          "name": "a",
          "type": "string[3]"
        }
      ],
      "returns": {
        "type": "string"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            5,
            6
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            7
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            10
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            13
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:643",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            40
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            41,
            42,
            43,
            44,
            45,
            46
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            47,
            48,
            49
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            50,
            51,
            52
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            53
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            54
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            55
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            56,
            57,
            58
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            59
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            60
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            61
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            62
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            63
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            64
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            65,
            66,
            67
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            68,
            69
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            70,
            71
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            72
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            73,
            74
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            75,
            76
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            77,
            78
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            79
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            80
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            83
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            84
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            85
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            86
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            87
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            88
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            89
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:645",
          "pc": [
            90,
            91,
            92
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:644",
          "pc": [
            93
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            94
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            95
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            96,
            97,
            98,
            99,
            100,
            101
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            105,
            106,
            107,
            108
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:643",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            109
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            110,
            111,
            112,
            113,
            114,
            115
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            116,
            117,
            118
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:643",
          "pc": [
            119,
            120,
            121,
            122
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:643",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            123
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDIKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA2LjIKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBzdGF0aWNTdHJpbmdBcnJheUFyZyhzdHJpbmdbM10pc3RyaW5nCiphYmlfcm91dGVfc3RhdGljU3RyaW5nQXJyYXlBcmc6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCXB1c2hieXRlcyAweDE1MWY3Yzc1CgoJLy8gYTogc3RyaW5nWzNdCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCgoJLy8gZXhlY3V0ZSBzdGF0aWNTdHJpbmdBcnJheUFyZyhzdHJpbmdbM10pc3RyaW5nCgljYWxsc3ViIHN0YXRpY1N0cmluZ0FycmF5QXJnCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY29uY2F0Cglsb2cKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIHN0YXRpY1N0cmluZ0FycmF5QXJnKGE6IFN0YXRpY0FycmF5PHN0cmluZywgMz4pOiBzdHJpbmcKc3RhdGljU3RyaW5nQXJyYXlBcmc6Cglwcm90byAxIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6NjQ1CgkvLyByZXR1cm4gYVsxXTsKCWZyYW1lX2RpZyAtMSAvLyBhOiBTdGF0aWNBcnJheTxzdHJpbmcsIDM+CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJaW50YyAxIC8vIDIKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCXVuY292ZXIgMgoJZXh0cmFjdF91aW50MTYKCWR1cCAvLyBkdXBsaWNhdGUgc3RhcnQgb2YgZWxlbWVudAoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJc3dhcAoJZXh0cmFjdF91aW50MTYgLy8gZ2V0IG51bWJlciBvZiBlbGVtZW50cwoJaW50YyAwIC8vICBnZXQgdHlwZSBsZW5ndGgKCSogLy8gbXVsdGlwbHkgYnkgdHlwZSBsZW5ndGgKCWludGMgMSAvLyAyCgkrIC8vIGFkZCB0d28gZm9yIGxlbmd0aAoJZXh0cmFjdDMKCWV4dHJhY3QgMiAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4YmM4ZDEyMDQgLy8gbWV0aG9kICJzdGF0aWNTdHJpbmdBcnJheUFyZyhzdHJpbmdbM10pc3RyaW5nIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9zdGF0aWNTdHJpbmdBcnJheUFyZwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAQIxGBSBBgsxGQiNDABGAAAAAAAAAAAAAAA4AAAAAAAAAAAAAACABBUffHU2GgGIAAxJFRZXBgJMUFCwIkOKAQGL/zX/IzT/NP9PAllJNP9MWSILIwhYVwIAiSJDgAS4RHs2NhoAjgH/8QCABLyNEgQ2GgCOAf+uAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}