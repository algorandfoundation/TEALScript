#pragma version 10
intcblock 1 TMPL_uint64TmplVar
bytecblock TMPL_bytesTmplVar TMPL_bytes64TmplVar TMPL_bytes32TmplVar

// This TEAL was generated by TEALScript v0.106.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// tmpl()void
*abi_route_tmpl:
	// execute tmpl()void
	callsub tmpl
	intc 0 // 1
	return

// tmpl(): void
tmpl:
	proto 0 0

	// tests/contracts/general.algo.ts:34
	// log(this.bytesTmplVar)
	bytec 0 // TMPL_bytesTmplVar
	log

	// tests/contracts/general.algo.ts:35
	// assert(this.uint64TmplVar)
	intc 1 // TMPL_uint64TmplVar
	assert
	retsub

// specificLengthTemplateVar()void
*abi_route_specificLengthTemplateVar:
	// execute specificLengthTemplateVar()void
	callsub specificLengthTemplateVar
	intc 0 // 1
	return

// specificLengthTemplateVar(): void
specificLengthTemplateVar:
	proto 0 0

	// tests/contracts/general.algo.ts:39
	// ed25519VerifyBare(this.bytesTmplVar, this.bytes64TmplVar, this.bytes32TmplVar)
	bytec 0 // TMPL_bytesTmplVar
	bytec 1 // TMPL_bytes64TmplVar
	bytec 2 // TMPL_bytes32TmplVar
	ed25519verify_bare
	retsub

// throwError()void
*abi_route_throwError:
	// execute throwError()void
	callsub throwError
	intc 0 // 1
	return

// throwError(): void
throwError:
	proto 0 0

	// this is an error
	err
	retsub

// itobTemplateVar()byte[]
*abi_route_itobTemplateVar:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// execute itobTemplateVar()byte[]
	callsub itobTemplateVar
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	intc 0 // 1
	return

// itobTemplateVar(): bytes
itobTemplateVar:
	proto 0 1

	// tests/contracts/general.algo.ts:47
	// return itob(this.uint64TmplVar);
	intc 1 // TMPL_uint64TmplVar
	itob
	retsub

*abi_route_createApplication:
	intc 0 // 1
	return

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x9a71d2b4 // method "tmpl()void"
	pushbytes 0xdf4d5c3b // method "specificLengthTemplateVar()void"
	pushbytes 0x3d870d87 // method "throwError()void"
	pushbytes 0xbc0b1706 // method "itobTemplateVar()byte[]"
	txna ApplicationArgs 0
	match *abi_route_tmpl *abi_route_specificLengthTemplateVar *abi_route_throwError *abi_route_itobTemplateVar

	// this contract does not implement the given ABI method for call NoOp
	err