{
  "name": "ABITestBoolUpdateInBox",
  "desc": "",
  "methods": [
    {
      "name": "boolUpdateInBox",
      "args": [
        {
          "name": "id",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "Data": [
      {
        "name": "value",
        "type": "uint64"
      },
      {
        "name": "bool",
        "type": "bool"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "boxes": {
          "keyType": "uint64",
          "valueType": "Data",
          "prefix": "a"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            4,
            5,
            6,
            7
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            14,
            15
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            16
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:1720",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            43
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            44,
            45,
            46
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            47
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            48,
            49,
            50
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            51
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            52
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            53,
            54,
            55
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            56,
            57
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            58
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            59,
            60
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            61
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            62
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            63,
            64
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            65
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            66,
            67
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            68
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            69
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            70
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1725",
          "errorMessage": "box value does not exist: this.boxes(id).value",
          "pc": [
            71
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            72,
            73
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            74,
            75
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            76,
            77
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            78
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            79
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            80
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            83
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            84
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            85
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            86
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            87
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            88
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            89
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            90,
            91,
            92,
            93,
            94,
            95
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            96,
            97,
            98
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            99,
            100,
            101,
            102
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1720",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            103
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            104,
            105,
            106,
            107,
            108,
            109
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            110,
            111,
            112
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            113,
            114,
            115,
            116
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:1720",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            117
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCmJ5dGVjYmxvY2sgMHg2MQoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMQovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGJvb2xVcGRhdGVJbkJveCh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX2Jvb2xVcGRhdGVJbkJveDoKCS8vIGlkOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIGJvb2xVcGRhdGVJbkJveCh1aW50NjQpdm9pZAoJY2FsbHN1YiBib29sVXBkYXRlSW5Cb3gKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGJvb2xVcGRhdGVJbkJveChpZDogdWludDY0KTogdm9pZApib29sVXBkYXRlSW5Cb3g6Cglwcm90byAxIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJcHVzaGJ5dGVzIDB4CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE3MjQKCS8vIGJveCA9IHRoaXMuYm94ZXMoaWQpLnZhbHVlCglieXRlYyAwIC8vICAiYSIKCWZyYW1lX2RpZyAtMSAvLyBpZDogdWludDY0CglpdG9iCgljb25jYXQKCWZyYW1lX2J1cnkgMCAvLyBzdG9yYWdlIGtleS8vYm94CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjE3MjUKCS8vIHRoaXMuYm94ZXMoaWQpLnZhbHVlLmJvb2wgPSB0cnVlCglieXRlYyAwIC8vICAiYSIKCWZyYW1lX2RpZyAtMSAvLyBpZDogdWludDY0CglpdG9iCgljb25jYXQKCWJveF9nZXQKCgkvLyBib3ggdmFsdWUgZG9lcyBub3QgZXhpc3Q6IHRoaXMuYm94ZXMoaWQpLnZhbHVlCglhc3NlcnQKCXN0b3JlIDI1NSAvLyBmdWxsIGFycmF5Cglsb2FkIDI1NSAvLyBmdWxsIGFycmF5CglwdXNoaW50IDY0CglpbnRjIDAgLy8gMQoJc2V0Yml0CglieXRlYyAwIC8vICAiYSIKCWZyYW1lX2RpZyAtMSAvLyBpZDogdWludDY0CglpdG9iCgljb25jYXQKCXN3YXAKCWJveF9wdXQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMCAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHg0ZDBiMWYwMiAvLyBtZXRob2QgImJvb2xVcGRhdGVJbkJveCh1aW50NjQpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbFVwZGF0ZUluQm94CgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABASYBAWExGBSBBgsxGQiNDAA9AAAAAAAAAAAAAAAvAAAAAAAAAAAAAAA2GgEXiAACIkOKAQCAACiL/xZQjAAoi/8WUL5ENf80/4FAIlQoi/8WUEy/iSJDgAS4RHs2NhoAjgH/8QCABE0LHwI2GgCOAf+3AA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}