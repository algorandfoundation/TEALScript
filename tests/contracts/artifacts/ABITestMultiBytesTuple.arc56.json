{
  "name": "ABITestMultiBytesTuple",
  "desc": "",
  "methods": [
    {
      "name": "multiBytesTuple",
      "args": [],
      "returns": {
        "type": "(byte[],byte[])"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            4,
            5,
            6
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            9
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            12
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            13,
            14
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            15
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:1217",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            42
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            43,
            44,
            45,
            46,
            47,
            48
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            49,
            50,
            51
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            52
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            53
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            54
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            55
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            56,
            57,
            58
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            59
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            60
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            61,
            62,
            63,
            64
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            65,
            66,
            67,
            68,
            69
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            70,
            71,
            72
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            73,
            74,
            75,
            76,
            77
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            78,
            79,
            80
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            81
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:1219",
          "pc": [
            82
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:1218",
          "pc": [
            83
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            84
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            85
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            86,
            87,
            88,
            89,
            90,
            91
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            92,
            93,
            94
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            95,
            96,
            97,
            98
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1217",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            99
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            100,
            101,
            102,
            103,
            104,
            105
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            106,
            107,
            108
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            109,
            110,
            111,
            112
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:1217",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            113
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            114,
            115,
            116
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            117,
            118
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            119,
            120
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            121
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            122,
            123
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            124,
            125
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            126
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            127
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            128,
            129
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            130
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            131
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            132
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            133,
            134,
            135
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            136,
            137
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            138,
            139
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            140
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            141
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            142,
            143
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            144,
            145
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            146,
            147
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            148,
            149
          ]
        },
        {
          "teal": 98,
          "source": "tests/contracts/abi.algo.ts:1217",
          "pc": [
            150
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCmJ5dGVjYmxvY2sgMHgKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA2LjMKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBtdWx0aUJ5dGVzVHVwbGUoKShieXRlW10sYnl0ZVtdKQoqYWJpX3JvdXRlX211bHRpQnl0ZXNUdXBsZToKCS8vIFRoZSBBQkkgcmV0dXJuIHByZWZpeAoJcHVzaGJ5dGVzIDB4MTUxZjdjNzUKCgkvLyBleGVjdXRlIG11bHRpQnl0ZXNUdXBsZSgpKGJ5dGVbXSxieXRlW10pCgljYWxsc3ViIG11bHRpQnl0ZXNUdXBsZQoJY29uY2F0Cglsb2cKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIG11bHRpQnl0ZXNUdXBsZSgpOiBbYnl0ZXMsIGJ5dGVzXQptdWx0aUJ5dGVzVHVwbGU6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTIxOQoJLy8gcmV0dXJuIFtoZXgoJzB4MDEnKSwgaGV4KCcweDAyJyldOwoJYnl0ZWMgMCAvLyAgaW5pdGlhbCBoZWFkCglieXRlYyAwIC8vICBpbml0aWFsIHRhaWwKCXB1c2hieXRlcyAweDAwMDQgLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJcHVzaGJ5dGVzIDB4MDAwMTAxCgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJcHVzaGJ5dGVzIDB4MDAwMTAyCgljYWxsc3ViICpwcm9jZXNzX2R5bmFtaWNfdHVwbGVfZWxlbWVudAoJcG9wIC8vIHBvcCBoZWFkIG9mZnNldAoJY29uY2F0IC8vIGNvbmNhdCBoZWFkIGFuZCB0YWlsCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4N2JmZDkzNTcgLy8gbWV0aG9kICJtdWx0aUJ5dGVzVHVwbGUoKShieXRlW10sYnl0ZVtdKSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfbXVsdGlCeXRlc1R1cGxlCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJyCgoqcHJvY2Vzc19keW5hbWljX3R1cGxlX2VsZW1lbnQ6Cglwcm90byA0IDMKCWZyYW1lX2RpZyAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCWNvbmNhdAoJZnJhbWVfYnVyeSAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTEgLy8gZWxlbWVudAoJZHVwCglsZW4KCWZyYW1lX2RpZyAtMiAvLyBoZWFkIG9mZnNldAoJYnRvaQoJKwoJaXRvYgoJZXh0cmFjdCA2IDIKCWZyYW1lX2J1cnkgLTIgLy8gaGVhZCBvZmZzZXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglzd2FwCgljb25jYXQKCWZyYW1lX2J1cnkgLTMgLy8gdHVwbGUgdGFpbAoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1Yg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABASYBADEYFIEGCzEZCI0MADoAAAAAAAAAAAAAACwAAAAAAAAAAAAAAIAEFR98dYgABFCwIkOKAAEoKIACAASAAwABAYgAKYADAAECiAAhSFCJIkOABLhEezY2GgCOAf/xAIAEe/2TVzYaAI4B/7oAigQDi/yL/lCM/Iv/SRWL/hcIFlcGAoz+i/1MUIz9i/yL/Yv+iQ==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}