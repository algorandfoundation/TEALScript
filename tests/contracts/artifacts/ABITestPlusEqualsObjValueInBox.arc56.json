{
  "name": "ABITestPlusEqualsObjValueInBox",
  "desc": "",
  "methods": [
    {
      "name": "plusEqualsObjValueInBox",
      "args": [],
      "returns": {
        "type": "(uint64,uint64)",
        "struct": "{ foo: uint64; bar: uint64; }"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ foo: uint64; bar: uint64 }": [
      {
        "name": "foo",
        "type": "uint64"
      },
      {
        "name": "bar",
        "type": "uint64"
      }
    ],
    "{ foo: uint64; bar: uint64; }": [
      {
        "name": "foo",
        "type": "uint64"
      },
      {
        "name": "bar",
        "type": "uint64"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "bMap": {
          "keyType": "AVMBytes",
          "valueType": "{ foo: uint64; bar: uint64 }"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            12,
            13
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            14
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            15,
            16
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            17
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            18,
            19
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            20
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:1247",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            47
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            48,
            49,
            50,
            51,
            52,
            53
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            54,
            55,
            56
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            57
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            58
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            59
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            60
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            61,
            62,
            63
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1251",
          "pc": [
            64
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1251",
          "pc": [
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1251",
          "pc": [
            83
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            84
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            85
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            86
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            87
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            88
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            89
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            90
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            91
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            92
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            93
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            94,
            95
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1252",
          "pc": [
            96
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1253",
          "pc": [
            97
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1253",
          "pc": [
            98
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1253",
          "errorMessage": "box value does not exist: this.bMap('bMap').value",
          "pc": [
            99
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1250",
          "pc": [
            100
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            101
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            102
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            103,
            104,
            105,
            106,
            107,
            108
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            109,
            110,
            111
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            112,
            113,
            114,
            115
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:1247",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            116
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            117,
            118,
            119,
            120,
            121,
            122
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            123,
            124,
            125
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1247",
          "pc": [
            126,
            127,
            128,
            129
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:1247",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            130
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDgKYnl0ZWNibG9jayAweDYyNGQ2MTcwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNy4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gcGx1c0VxdWFsc09ialZhbHVlSW5Cb3goKSh1aW50NjQsdWludDY0KQoqYWJpX3JvdXRlX3BsdXNFcXVhbHNPYmpWYWx1ZUluQm94OgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgcGx1c0VxdWFsc09ialZhbHVlSW5Cb3goKSh1aW50NjQsdWludDY0KQoJY2FsbHN1YiBwbHVzRXF1YWxzT2JqVmFsdWVJbkJveAoJY29uY2F0Cglsb2cKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIHBsdXNFcXVhbHNPYmpWYWx1ZUluQm94KCk6IHsgZm9vOiB1aW50NjQ7IGJhcjogdWludDY0IH0KcGx1c0VxdWFsc09ialZhbHVlSW5Cb3g6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTI1MQoJLy8gdGhpcy5iTWFwKCdiTWFwJykudmFsdWUgPSB7IGZvbzogMywgYmFyOiA0IH0KCWJ5dGVjIDAgLy8gICJiTWFwIgoJcHVzaGJ5dGVzIDB4MDAwMDAwMDAwMDAwMDAwMzAwMDAwMDAwMDAwMDAwMDQKCWJveF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTI1MgoJLy8gdGhpcy5iTWFwKCdiTWFwJykudmFsdWUuYmFyICs9IDEKCWludGMgMSAvLyAgaGVhZE9mZnNldAoJYnl0ZWMgMCAvLyAgImJNYXAiCglpbnRjIDEgLy8gIGhlYWRPZmZzZXQKCWludGMgMSAvLyA4Cglib3hfZXh0cmFjdAoJYnRvaQoJaW50YyAwIC8vIDEKCSsKCWl0b2IKCWJ5dGVjIDAgLy8gICJiTWFwIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTI1MwoJLy8gcmV0dXJuIHRoaXMuYk1hcCgnYk1hcCcpLnZhbHVlOwoJYnl0ZWMgMCAvLyAgImJNYXAiCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLmJNYXAoJ2JNYXAnKS52YWx1ZQoJYXNzZXJ0CglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4NjYxOWI1MTEgLy8gbWV0aG9kICJwbHVzRXF1YWxzT2JqVmFsdWVJbkJveCgpKHVpbnQ2NCx1aW50NjQpIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9wbHVzRXF1YWxzT2JqVmFsdWVJbkJveAoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAQgmAQRiTWFwMRgUgQYLMRkIjQwARgAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAgAQVH3x1iAAEULAiQ4oAASiAEAAAAAAAAAADAAAAAAAAAAS/IygjI7oXIggWKE4Cuyi+RIkiQ4AEuER7NjYaAI4B//EAgARmGbURNhoAjgH/rgA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 1,
      "patch": 2,
      "commitHash": "088f89dd"
    }
  }
}