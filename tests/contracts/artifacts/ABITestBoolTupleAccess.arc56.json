{
  "name": "ABITestBoolTupleAccess",
  "desc": "",
  "methods": [
    {
      "name": "boolTupleAccess",
      "args": [],
      "returns": {
        "type": "bool"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            9
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            11
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            12,
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            14
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:903",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            41
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            42,
            43,
            44,
            45,
            46,
            47
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            48,
            49,
            50
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            51,
            52,
            53
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            54
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            55,
            56
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            57
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            58
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            59
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            60
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            61
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            62,
            63,
            64
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            65,
            66
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:906",
          "pc": [
            67,
            68,
            69,
            70
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:906",
          "pc": [
            71
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:906",
          "pc": [
            72
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:906",
          "pc": [
            73
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:907",
          "pc": [
            74
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:907",
          "pc": [
            75
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:907",
          "pc": [
            76
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:908",
          "pc": [
            77,
            78
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:908",
          "pc": [
            79
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:908",
          "pc": [
            80
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:909",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:909",
          "pc": [
            83
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:909",
          "pc": [
            84
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:910",
          "pc": [
            85,
            86
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:910",
          "pc": [
            87
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:910",
          "pc": [
            88
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:911",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:911",
          "pc": [
            91
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:911",
          "pc": [
            92
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:912",
          "pc": [
            93
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:912",
          "pc": [
            94
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:912",
          "pc": [
            95
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:913",
          "pc": [
            96,
            97
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:913",
          "pc": [
            98
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:913",
          "pc": [
            99
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:914",
          "pc": [
            100
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:914",
          "pc": [
            101
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:914",
          "pc": [
            102
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:905",
          "pc": [
            103,
            104
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/abi.algo.ts:917",
          "pc": [
            105,
            106
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:917",
          "pc": [
            107,
            108
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:917",
          "pc": [
            109,
            110
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:917",
          "pc": [
            111
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/abi.algo.ts:917",
          "pc": [
            112
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            113,
            114
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/abi.algo.ts:904",
          "pc": [
            115
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            116
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            117
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            118,
            119,
            120,
            121,
            122,
            123
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            124,
            125,
            126
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            127,
            128,
            129,
            130
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/abi.algo.ts:903",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            131
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            132,
            133,
            134,
            135,
            136,
            137
          ]
        },
        {
          "teal": 117,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            138,
            139,
            140
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/abi.algo.ts:903",
          "pc": [
            141,
            142,
            143,
            144
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/abi.algo.ts:903",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            145
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAwIDEgNiA4CgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNi4zCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQppbnRjIDIgLy8gNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBib29sVHVwbGVBY2Nlc3MoKWJvb2wKKmFiaV9yb3V0ZV9ib29sVHVwbGVBY2Nlc3M6CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCXB1c2hieXRlcyAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBib29sVHVwbGVBY2Nlc3MoKWJvb2wKCWNhbGxzdWIgYm9vbFR1cGxlQWNjZXNzCglwdXNoYnl0ZXMgMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0Cgljb25jYXQKCWxvZwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gYm9vbFR1cGxlQWNjZXNzKCk6IGJvb2xlYW4KYm9vbFR1cGxlQWNjZXNzOgoJcHJvdG8gMCAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCXB1c2hieXRlcyAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo5MDUKCS8vIGE6IFtib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuXSA9IFsKCS8vICAgICAgIGZhbHNlLAoJLy8gICAgICAgZmFsc2UsCgkvLyAgICAgICBmYWxzZSwKCS8vICAgICAgIGZhbHNlLAoJLy8gICAgICAgZmFsc2UsCgkvLyAgICAgICBmYWxzZSwKCS8vICAgICAgIGZhbHNlLAoJLy8gICAgICAgZmFsc2UsCgkvLyAgICAgICB0cnVlLAoJLy8gICAgIF0KCXB1c2hieXRlcyAweDAwMDAKCWludGMgMCAvLyAwCglkdXAKCXNldGJpdAoJaW50YyAxIC8vIDEKCWludGMgMCAvLyAwCglzZXRiaXQKCXB1c2hpbnQgMgoJaW50YyAwIC8vIDAKCXNldGJpdAoJcHVzaGludCAzCglpbnRjIDAgLy8gMAoJc2V0Yml0CglwdXNoaW50IDQKCWludGMgMCAvLyAwCglzZXRiaXQKCXB1c2hpbnQgNQoJaW50YyAwIC8vIDAKCXNldGJpdAoJaW50YyAyIC8vIDYKCWludGMgMCAvLyAwCglzZXRiaXQKCXB1c2hpbnQgNwoJaW50YyAwIC8vIDAKCXNldGJpdAoJaW50YyAzIC8vIDgKCWludGMgMSAvLyAxCglzZXRiaXQKCWZyYW1lX2J1cnkgMCAvLyBhOiBbYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbiwgYm9vbGVhbl0KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6OTE3CgkvLyByZXR1cm4gYVs4XTsKCWZyYW1lX2RpZyAwIC8vIGE6IFtib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuLCBib29sZWFuXQoJc3RvcmUgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCWludGMgMyAvLyA4CglnZXRiaXQKCgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMSAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHhjOGYyNWVkMSAvLyBtZXRob2QgImJvb2xUdXBsZUFjY2VzcygpYm9vbCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbFR1cGxlQWNjZXNzCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAEAAEGCDEYFCQLMRkIjQwAWwAAAAAAAAAAAAAATQAAAAAAAAAAAAAAgAQVH3x1iAALgAEAIk8CVFCwI0OKAAGAAIACAAAiSVQjIlSBAiJUgQMiVIEEIlSBBSJUJCJUgQciVCUjVIwAiwA1/zT/JVOMAIkjQ4AEuER7NjYaAI4B//EAgATI8l7RNhoAjgH/mQA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}