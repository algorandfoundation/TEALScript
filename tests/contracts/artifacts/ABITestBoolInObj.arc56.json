{
  "name": "ABITestBoolInObj",
  "desc": "",
  "methods": [
    {
      "name": "boolInObj",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            6,
            7
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            8
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            9,
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            11
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            12,
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            14
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:1223",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            41
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            42,
            43,
            44
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            45
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            46
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            47,
            48,
            49
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            50,
            51
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            52,
            53,
            54
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            55
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            56
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            57
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            58
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            59
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            60
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            61
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            62
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            63
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1225",
          "pc": [
            64,
            65
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            66,
            67
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            68,
            69
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            70,
            71
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            72
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            73
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            74
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:1226",
          "pc": [
            75,
            76
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            77,
            78
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            79,
            80
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            83
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            84
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            85
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            86
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:1227",
          "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
          "pc": [
            87
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            88,
            89
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            90,
            91
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            92,
            93
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            94
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            95
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            96
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            97
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:1227",
          "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
          "pc": [
            98
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            99,
            100
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            101,
            102
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            103,
            104
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            105
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            106
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            107
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:1227",
          "pc": [
            108
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:1227",
          "errorMessage": "asserts failed: asserts(x.foo === true, x.bar === false, x.baz === true)",
          "pc": [
            109
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:1224",
          "pc": [
            110
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            111
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            112
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            113,
            114,
            115,
            116,
            117,
            118
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            119,
            120,
            121
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            122,
            123,
            124,
            125
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/abi.algo.ts:1223",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            126
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            127,
            128,
            129,
            130,
            131,
            132
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            133,
            134,
            135
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/abi.algo.ts:1223",
          "pc": [
            136,
            137,
            138,
            139
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/abi.algo.ts:1223",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            140
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDAgMgoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMgovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGJvb2xJbk9iaigpdm9pZAoqYWJpX3JvdXRlX2Jvb2xJbk9iajoKCS8vIGV4ZWN1dGUgYm9vbEluT2JqKCl2b2lkCgljYWxsc3ViIGJvb2xJbk9iagoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gYm9vbEluT2JqKCk6IHZvaWQKYm9vbEluT2JqOgoJcHJvdG8gMCAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCXB1c2hieXRlcyAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMjI1CgkvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfSA9IHsgZm9vOiB0cnVlLCBiYXI6IHRydWUsIGJhejogdHJ1ZSB9CglwdXNoYnl0ZXMgMHgwMAoJaW50YyAxIC8vIDAKCWludGMgMCAvLyAxCglzZXRiaXQKCWludGMgMCAvLyAxCglkdXAKCXNldGJpdAoJaW50YyAyIC8vIDIKCWludGMgMCAvLyAxCglzZXRiaXQKCWZyYW1lX2J1cnkgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMjI2CgkvLyB4LmJhciA9IGZhbHNlCglmcmFtZV9kaWcgMCAvLyB4OiB7IGZvbzogYm9vbGVhbjsgYmFyOiBib29sZWFuOyBiYXo6IGJvb2xlYW4gfQoJc3RvcmUgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCWludGMgMCAvLyAxCglpbnRjIDEgLy8gMAoJc2V0Yml0CglmcmFtZV9idXJ5IDAgLy8geDogeyBmb286IGJvb2xlYW47IGJhcjogYm9vbGVhbjsgYmF6OiBib29sZWFuIH0KCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTIyNwoJLy8gYXNzZXJ0cyh4LmZvbyA9PT0gdHJ1ZSwgeC5iYXIgPT09IGZhbHNlLCB4LmJheiA9PT0gdHJ1ZSkKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50YyAxIC8vIDAKCWdldGJpdAoJaW50YyAwIC8vIDEKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50YyAwIC8vIDEKCWdldGJpdAoJaW50YyAxIC8vIDAKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCWZyYW1lX2RpZyAwIC8vIHg6IHsgZm9vOiBib29sZWFuOyBiYXI6IGJvb2xlYW47IGJhejogYm9vbGVhbiB9CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50YyAyIC8vIDIKCWdldGJpdAoJaW50YyAwIC8vIDEKCT09CgoJLy8gYXNzZXJ0cyBmYWlsZWQ6IGFzc2VydHMoeC5mb28gPT09IHRydWUsIHguYmFyID09PSBmYWxzZSwgeC5iYXogPT09IHRydWUpCglhc3NlcnQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMCAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHhlNjdjOGZjYiAvLyBtZXRob2QgImJvb2xJbk9iaigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbEluT2JqCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAQACMRgUgQYLMRkIjQwAVgAAAAAAAAAAAAAASAAAAAAAAAAAAAAAiAACIkOKAACAAIABACMiVCJJVCQiVIwAiwA1/zT/IiNUjACLADX/NP8jUyISRIsANf80/yJTIxJEiwA1/zT/JFMiEkSJIkOABLhEezY2GgCOAf/xAIAE5nyPyzYaAI4B/54A",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}