{
  "name": "ABITestTypedVarFromStorage",
  "desc": "",
  "methods": [
    {
      "name": "typedVarFromStorage",
      "args": [
        {
          "name": "key",
          "type": "uint32"
        }
      ],
      "returns": {
        "type": "byte[32]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "boxMapTest": {
          "keyType": "uint32",
          "valueType": "byte[32]"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:1296",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            40,
            41,
            42,
            43,
            44,
            45
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            46,
            47,
            48
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            49
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            50
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            51,
            52
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            53
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:1299",
          "errorMessage": "argument 0 (key) for typedVarFromStorage must be a uint32",
          "pc": [
            54
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            55
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            56,
            57,
            58
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            59
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            60
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            61
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            62
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            63,
            64,
            65
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            66,
            67
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:1300",
          "pc": [
            68,
            69
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:1300",
          "pc": [
            70
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1300",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1300",
          "pc": [
            74,
            75
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:1300",
          "pc": [
            76,
            77
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1300",
          "pc": [
            78
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1300",
          "errorMessage": "box value does not exist: this.boxMapTest(key).value",
          "pc": [
            79
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            80,
            81
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:1299",
          "pc": [
            82
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            83
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            84
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            85,
            86,
            87,
            88,
            89,
            90
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            91,
            92,
            93
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            94,
            95,
            96,
            97
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:1296",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            98
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            99,
            100,
            101,
            102,
            103,
            104
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            105,
            106,
            107
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:1296",
          "pc": [
            108,
            109,
            110,
            111
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/abi.algo.ts:1296",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            112
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNy4wCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gdHlwZWRWYXJGcm9tU3RvcmFnZSh1aW50MzIpYnl0ZVszMl0KKmFiaV9yb3V0ZV90eXBlZFZhckZyb21TdG9yYWdlOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGtleTogdWludDMyCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJcHVzaGludCA0Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKGtleSkgZm9yIHR5cGVkVmFyRnJvbVN0b3JhZ2UgbXVzdCBiZSBhIHVpbnQzMgoJYXNzZXJ0CglidG9pCgoJLy8gZXhlY3V0ZSB0eXBlZFZhckZyb21TdG9yYWdlKHVpbnQzMilieXRlWzMyXQoJY2FsbHN1YiB0eXBlZFZhckZyb21TdG9yYWdlCgljb25jYXQKCWxvZwoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gdHlwZWRWYXJGcm9tU3RvcmFnZShrZXk6IHVpbnQ8MzI+KTogYnl0ZXMzMgp0eXBlZFZhckZyb21TdG9yYWdlOgoJcHJvdG8gMSAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCXB1c2hieXRlcyAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxMzAwCgkvLyB2YWx1ZTogYnl0ZXMzMiA9IHRoaXMuYm94TWFwVGVzdChrZXkpLnZhbHVlCglmcmFtZV9kaWcgLTEgLy8ga2V5OiB1aW50PDMyPgoJaXRvYgoJZXh0cmFjdCA0IDQKCWZyYW1lX2J1cnkgMCAvLyBzdG9yYWdlIGtleS8vdmFsdWUKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTMwMgoJLy8gcmV0dXJuIHZhbHVlOwoJZnJhbWVfZGlnIDAgLy8gc3RvcmFnZSBrZXkvL3ZhbHVlCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLmJveE1hcFRlc3Qoa2V5KS52YWx1ZQoJYXNzZXJ0CgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4NGM1MjlmNTUgLy8gbWV0aG9kICJ0eXBlZFZhckZyb21TdG9yYWdlKHVpbnQzMilieXRlWzMyXSIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfdHlwZWRWYXJGcm9tU3RvcmFnZQoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MADwAAAAAAAAAAAAAAC4AAAAAAAAAAAAAAIAEFR98dTYaAUkVgQQSRBeIAARQsCJDigEBgACL/xZXBASMAIsAvkSMAIkiQ4AEuER7NjYaAI4B//EAgARMUp9VNhoAjgH/uAA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 1,
      "patch": 2,
      "commitHash": "088f89dd"
    }
  }
}