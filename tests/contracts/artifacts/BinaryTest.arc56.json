{
  "name": "BinaryTest",
  "desc": "",
  "methods": [
    {
      "name": "and",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "or",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "equal",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "notEqual",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitAnd",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitOr",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitXor",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "combo",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        },
        {
          "name": "c",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitwiseXorOp",
      "args": [
        {
          "name": "a",
          "type": "byte[]"
        },
        {
          "name": "b",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitwiseAndOp",
      "args": [
        {
          "name": "a",
          "type": "byte[]"
        },
        {
          "name": "b",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitwiseOrOp",
      "args": [
        {
          "name": "a",
          "type": "byte[]"
        },
        {
          "name": "b",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitwiseNotOp",
      "args": [
        {
          "name": "a",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/binary.algo.ts:4",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            40,
            41,
            42
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            43
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            44,
            45,
            46
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            47
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            48,
            49,
            50
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            51
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            52
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            53,
            54,
            55
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            56,
            57
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            58
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            59,
            60,
            61
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            62,
            63
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            64
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            65
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            66
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            70
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            74
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            75,
            76,
            77
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            78
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            79
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            80,
            81,
            82
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            83,
            84
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            85
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            86,
            87,
            88
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            91
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            92
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            93
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            94,
            95,
            96
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            97
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            98,
            99,
            100
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            101
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            105
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            106
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            107,
            108,
            109
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            112,
            113
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            114
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            115
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            116
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            117,
            118,
            119
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            120
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            121,
            122,
            123
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            124
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            125,
            126,
            127
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            128
          ]
        },
        {
          "teal": 128,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            129
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            130,
            131,
            132
          ]
        },
        {
          "teal": 136,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            133,
            134
          ]
        },
        {
          "teal": 137,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            135,
            136
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            137
          ]
        },
        {
          "teal": 139,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            138
          ]
        },
        {
          "teal": 140,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            139
          ]
        },
        {
          "teal": 145,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            140,
            141,
            142
          ]
        },
        {
          "teal": 146,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            143
          ]
        },
        {
          "teal": 149,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            144,
            145,
            146
          ]
        },
        {
          "teal": 150,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            147
          ]
        },
        {
          "teal": 153,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            148,
            149,
            150
          ]
        },
        {
          "teal": 154,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            151
          ]
        },
        {
          "teal": 155,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            152
          ]
        },
        {
          "teal": 159,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            153,
            154,
            155
          ]
        },
        {
          "teal": 163,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            156,
            157
          ]
        },
        {
          "teal": 164,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            158,
            159
          ]
        },
        {
          "teal": 165,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            160
          ]
        },
        {
          "teal": 166,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            161
          ]
        },
        {
          "teal": 167,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            162
          ]
        },
        {
          "teal": 172,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            163,
            164,
            165
          ]
        },
        {
          "teal": 173,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            166
          ]
        },
        {
          "teal": 176,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            167,
            168,
            169
          ]
        },
        {
          "teal": 177,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            170
          ]
        },
        {
          "teal": 180,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            171,
            172,
            173
          ]
        },
        {
          "teal": 181,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            174
          ]
        },
        {
          "teal": 182,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            175
          ]
        },
        {
          "teal": 186,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            176,
            177,
            178
          ]
        },
        {
          "teal": 190,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            179,
            180
          ]
        },
        {
          "teal": 191,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            181,
            182
          ]
        },
        {
          "teal": 192,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            183
          ]
        },
        {
          "teal": 193,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            184
          ]
        },
        {
          "teal": 194,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            185
          ]
        },
        {
          "teal": 199,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            186,
            187,
            188
          ]
        },
        {
          "teal": 200,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            189
          ]
        },
        {
          "teal": 203,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            190,
            191,
            192
          ]
        },
        {
          "teal": 204,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            193
          ]
        },
        {
          "teal": 207,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            194,
            195,
            196
          ]
        },
        {
          "teal": 208,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            197
          ]
        },
        {
          "teal": 209,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            198
          ]
        },
        {
          "teal": 213,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            199,
            200,
            201
          ]
        },
        {
          "teal": 217,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            202,
            203
          ]
        },
        {
          "teal": 218,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            204,
            205
          ]
        },
        {
          "teal": 219,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            206
          ]
        },
        {
          "teal": 220,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            207
          ]
        },
        {
          "teal": 221,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            208
          ]
        },
        {
          "teal": 226,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            209,
            210,
            211
          ]
        },
        {
          "teal": 227,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            212
          ]
        },
        {
          "teal": 230,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            213,
            214,
            215
          ]
        },
        {
          "teal": 231,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            216
          ]
        },
        {
          "teal": 234,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            217,
            218,
            219
          ]
        },
        {
          "teal": 235,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            220
          ]
        },
        {
          "teal": 238,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            221,
            222,
            223
          ]
        },
        {
          "teal": 239,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            224
          ]
        },
        {
          "teal": 240,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            225
          ]
        },
        {
          "teal": 244,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            226,
            227,
            228
          ]
        },
        {
          "teal": 248,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            229,
            230
          ]
        },
        {
          "teal": 249,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            231
          ]
        },
        {
          "teal": 250,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            232,
            233,
            234
          ]
        },
        {
          "teal": 251,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            235,
            236
          ]
        },
        {
          "teal": 252,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            237
          ]
        },
        {
          "teal": 253,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            238,
            239,
            240
          ]
        },
        {
          "teal": 254,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            241,
            242
          ]
        },
        {
          "teal": 255,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            243
          ]
        },
        {
          "teal": 258,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            244
          ]
        },
        {
          "teal": 261,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            245
          ]
        },
        {
          "teal": 262,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            246
          ]
        },
        {
          "teal": 267,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            247,
            248,
            249
          ]
        },
        {
          "teal": 268,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            250,
            251,
            252
          ]
        },
        {
          "teal": 271,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            253,
            254,
            255
          ]
        },
        {
          "teal": 272,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            256,
            257,
            258
          ]
        },
        {
          "teal": 275,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            259,
            260,
            261
          ]
        },
        {
          "teal": 276,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            262
          ]
        },
        {
          "teal": 277,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            263
          ]
        },
        {
          "teal": 281,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            264,
            265,
            266
          ]
        },
        {
          "teal": 285,
          "source": "tests/contracts/binary.algo.ts:38",
          "pc": [
            267,
            268
          ]
        },
        {
          "teal": 286,
          "source": "tests/contracts/binary.algo.ts:38",
          "pc": [
            269,
            270
          ]
        },
        {
          "teal": 287,
          "source": "tests/contracts/binary.algo.ts:38",
          "pc": [
            271
          ]
        },
        {
          "teal": 288,
          "source": "tests/contracts/binary.algo.ts:37",
          "pc": [
            272
          ]
        },
        {
          "teal": 293,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            273,
            274,
            275
          ]
        },
        {
          "teal": 294,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            276,
            277,
            278
          ]
        },
        {
          "teal": 297,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            279,
            280,
            281
          ]
        },
        {
          "teal": 298,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            282,
            283,
            284
          ]
        },
        {
          "teal": 301,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            285,
            286,
            287
          ]
        },
        {
          "teal": 302,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            288
          ]
        },
        {
          "teal": 303,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            289
          ]
        },
        {
          "teal": 307,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            290,
            291,
            292
          ]
        },
        {
          "teal": 311,
          "source": "tests/contracts/binary.algo.ts:42",
          "pc": [
            293,
            294
          ]
        },
        {
          "teal": 312,
          "source": "tests/contracts/binary.algo.ts:42",
          "pc": [
            295,
            296
          ]
        },
        {
          "teal": 313,
          "source": "tests/contracts/binary.algo.ts:42",
          "pc": [
            297
          ]
        },
        {
          "teal": 314,
          "source": "tests/contracts/binary.algo.ts:41",
          "pc": [
            298
          ]
        },
        {
          "teal": 319,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            299,
            300,
            301
          ]
        },
        {
          "teal": 320,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            302,
            303,
            304
          ]
        },
        {
          "teal": 323,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            305,
            306,
            307
          ]
        },
        {
          "teal": 324,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            308,
            309,
            310
          ]
        },
        {
          "teal": 327,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            311,
            312,
            313
          ]
        },
        {
          "teal": 328,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            314
          ]
        },
        {
          "teal": 329,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            315
          ]
        },
        {
          "teal": 333,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            316,
            317,
            318
          ]
        },
        {
          "teal": 337,
          "source": "tests/contracts/binary.algo.ts:46",
          "pc": [
            319,
            320
          ]
        },
        {
          "teal": 338,
          "source": "tests/contracts/binary.algo.ts:46",
          "pc": [
            321,
            322
          ]
        },
        {
          "teal": 339,
          "source": "tests/contracts/binary.algo.ts:46",
          "pc": [
            323
          ]
        },
        {
          "teal": 340,
          "source": "tests/contracts/binary.algo.ts:45",
          "pc": [
            324
          ]
        },
        {
          "teal": 345,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            325,
            326,
            327
          ]
        },
        {
          "teal": 346,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            328,
            329,
            330
          ]
        },
        {
          "teal": 349,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            331,
            332,
            333
          ]
        },
        {
          "teal": 350,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            334
          ]
        },
        {
          "teal": 351,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            335
          ]
        },
        {
          "teal": 355,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            336,
            337,
            338
          ]
        },
        {
          "teal": 359,
          "source": "tests/contracts/binary.algo.ts:50",
          "pc": [
            339,
            340
          ]
        },
        {
          "teal": 360,
          "source": "tests/contracts/binary.algo.ts:50",
          "pc": [
            341
          ]
        },
        {
          "teal": 361,
          "source": "tests/contracts/binary.algo.ts:49",
          "pc": [
            342
          ]
        },
        {
          "teal": 364,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            343
          ]
        },
        {
          "teal": 365,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            344
          ]
        },
        {
          "teal": 368,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            345,
            346,
            347,
            348,
            349,
            350
          ]
        },
        {
          "teal": 369,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            351,
            352,
            353
          ]
        },
        {
          "teal": 370,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            354,
            355,
            356,
            357
          ]
        },
        {
          "teal": 373,
          "source": "tests/contracts/binary.algo.ts:4",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            358
          ]
        },
        {
          "teal": 376,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            359,
            360,
            361,
            362,
            363,
            364
          ]
        },
        {
          "teal": 377,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            365,
            366,
            367,
            368,
            369,
            370
          ]
        },
        {
          "teal": 378,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            371,
            372,
            373,
            374,
            375,
            376
          ]
        },
        {
          "teal": 379,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            377,
            378,
            379,
            380,
            381,
            382
          ]
        },
        {
          "teal": 380,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            383,
            384,
            385,
            386,
            387,
            388
          ]
        },
        {
          "teal": 381,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            389,
            390,
            391,
            392,
            393,
            394
          ]
        },
        {
          "teal": 382,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            395,
            396,
            397,
            398,
            399,
            400
          ]
        },
        {
          "teal": 383,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            401,
            402,
            403,
            404,
            405,
            406
          ]
        },
        {
          "teal": 384,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            407,
            408,
            409,
            410,
            411,
            412
          ]
        },
        {
          "teal": 385,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            413,
            414,
            415,
            416,
            417,
            418
          ]
        },
        {
          "teal": 386,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            419,
            420,
            421,
            422,
            423,
            424
          ]
        },
        {
          "teal": 387,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            425,
            426,
            427,
            428,
            429,
            430
          ]
        },
        {
          "teal": 388,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            431,
            432,
            433
          ]
        },
        {
          "teal": 389,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            434,
            435,
            436,
            437,
            438,
            439,
            440,
            441,
            442,
            443,
            444,
            445,
            446,
            447,
            448,
            449,
            450,
            451,
            452,
            453,
            454,
            455,
            456,
            457,
            458,
            459
          ]
        },
        {
          "teal": 392,
          "source": "tests/contracts/binary.algo.ts:4",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            460
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MAUAAAAAAAAAAAAAAATIAAAAAAAAAAAAAADYaAhc2GgEXiAACIkOKAgCL/0lBAAOL/hBEiTYaAhc2GgEXiAACIkOKAgCL/0lAAAOL/hFEiTYaAhc2GgEXiAACIkOKAgCL/4v+EkSJNhoCFzYaAReIAAIiQ4oCAIv/i/4TRIk2GgIXNhoBF4gAAiJDigIAi/+L/hpEiTYaAhc2GgEXiAACIkOKAgCL/4v+GUSJNhoCFzYaAReIAAIiQ4oCAIv/i/4bRIk2GgMXNhoCFzYaAReIAAIiQ4oDAIv/SUAACov+SUEAA4v9EBFEiTYaAlcCADYaAVcCAIgAAiJDigIAi/+L/q2JNhoCVwIANhoBVwIAiAACIkOKAgCL/4v+rIk2GgJXAgA2GgFXAgCIAAIiQ4oCAIv/i/6riTYaAVcCAIgAAiJDigEAi/+uiSJDgAS4RHs2NhoAjgH/8QCABG/ROhOABHAKqIeABHI8h++ABOf/udOABJKFGI6ABFktxz+ABG1GUEqABHTcUVCABEPCpW+ABMlyPl6ABP/INYWABL1rzqc2GgCODP5c/nf+kv6p/sD+1/7u/wX/K/9F/1//eQA=",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}