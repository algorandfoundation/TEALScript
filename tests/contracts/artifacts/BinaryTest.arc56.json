{
  "name": "BinaryTest",
  "desc": "",
  "methods": [
    {
      "name": "and",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "or",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "equal",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "notEqual",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitAnd",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitOr",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "bitXor",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "combo",
      "args": [
        {
          "name": "a",
          "type": "uint64"
        },
        {
          "name": "b",
          "type": "uint64"
        },
        {
          "name": "c",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            1,
            2,
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            4,
            5
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            6
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            7,
            8
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            9
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            10,
            11
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            12
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/binary.algo.ts:4",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            39
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            40,
            41,
            42
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            43
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            44,
            45,
            46
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            47
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            48,
            49,
            50
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            51
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            52
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            53,
            54,
            55
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            56,
            57
          ]
        },
        {
          "teal": 48,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            58
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            59,
            60,
            61
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            62,
            63
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            64
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/binary.algo.ts:6",
          "pc": [
            65
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/binary.algo.ts:5",
          "pc": [
            66
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            70
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            71,
            72,
            73
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            74
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            75,
            76,
            77
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            78
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            79
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            80,
            81,
            82
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            83,
            84
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            85
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            86,
            87,
            88
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            91
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/binary.algo.ts:10",
          "pc": [
            92
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/binary.algo.ts:9",
          "pc": [
            93
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            94,
            95,
            96
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            97
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            98,
            99,
            100
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            101
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            105
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            106
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            107,
            108,
            109
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            112,
            113
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            114
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/binary.algo.ts:14",
          "pc": [
            115
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/binary.algo.ts:13",
          "pc": [
            116
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            117,
            118,
            119
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            120
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            121,
            122,
            123
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            124
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            125,
            126,
            127
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            128
          ]
        },
        {
          "teal": 128,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            129
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            130,
            131,
            132
          ]
        },
        {
          "teal": 136,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            133,
            134
          ]
        },
        {
          "teal": 137,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            135,
            136
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            137
          ]
        },
        {
          "teal": 139,
          "source": "tests/contracts/binary.algo.ts:18",
          "pc": [
            138
          ]
        },
        {
          "teal": 140,
          "source": "tests/contracts/binary.algo.ts:17",
          "pc": [
            139
          ]
        },
        {
          "teal": 145,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            140,
            141,
            142
          ]
        },
        {
          "teal": 146,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            143
          ]
        },
        {
          "teal": 149,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            144,
            145,
            146
          ]
        },
        {
          "teal": 150,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            147
          ]
        },
        {
          "teal": 153,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            148,
            149,
            150
          ]
        },
        {
          "teal": 154,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            151
          ]
        },
        {
          "teal": 155,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            152
          ]
        },
        {
          "teal": 159,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            153,
            154,
            155
          ]
        },
        {
          "teal": 163,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            156,
            157
          ]
        },
        {
          "teal": 164,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            158,
            159
          ]
        },
        {
          "teal": 165,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            160
          ]
        },
        {
          "teal": 166,
          "source": "tests/contracts/binary.algo.ts:22",
          "pc": [
            161
          ]
        },
        {
          "teal": 167,
          "source": "tests/contracts/binary.algo.ts:21",
          "pc": [
            162
          ]
        },
        {
          "teal": 172,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            163,
            164,
            165
          ]
        },
        {
          "teal": 173,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            166
          ]
        },
        {
          "teal": 176,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            167,
            168,
            169
          ]
        },
        {
          "teal": 177,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            170
          ]
        },
        {
          "teal": 180,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            171,
            172,
            173
          ]
        },
        {
          "teal": 181,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            174
          ]
        },
        {
          "teal": 182,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            175
          ]
        },
        {
          "teal": 186,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            176,
            177,
            178
          ]
        },
        {
          "teal": 190,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            179,
            180
          ]
        },
        {
          "teal": 191,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            181,
            182
          ]
        },
        {
          "teal": 192,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            183
          ]
        },
        {
          "teal": 193,
          "source": "tests/contracts/binary.algo.ts:26",
          "pc": [
            184
          ]
        },
        {
          "teal": 194,
          "source": "tests/contracts/binary.algo.ts:25",
          "pc": [
            185
          ]
        },
        {
          "teal": 199,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            186,
            187,
            188
          ]
        },
        {
          "teal": 200,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            189
          ]
        },
        {
          "teal": 203,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            190,
            191,
            192
          ]
        },
        {
          "teal": 204,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            193
          ]
        },
        {
          "teal": 207,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            194,
            195,
            196
          ]
        },
        {
          "teal": 208,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            197
          ]
        },
        {
          "teal": 209,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            198
          ]
        },
        {
          "teal": 213,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            199,
            200,
            201
          ]
        },
        {
          "teal": 217,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            202,
            203
          ]
        },
        {
          "teal": 218,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            204,
            205
          ]
        },
        {
          "teal": 219,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            206
          ]
        },
        {
          "teal": 220,
          "source": "tests/contracts/binary.algo.ts:30",
          "pc": [
            207
          ]
        },
        {
          "teal": 221,
          "source": "tests/contracts/binary.algo.ts:29",
          "pc": [
            208
          ]
        },
        {
          "teal": 226,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            209,
            210,
            211
          ]
        },
        {
          "teal": 227,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            212
          ]
        },
        {
          "teal": 230,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            213,
            214,
            215
          ]
        },
        {
          "teal": 231,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            216
          ]
        },
        {
          "teal": 234,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            217,
            218,
            219
          ]
        },
        {
          "teal": 235,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            220
          ]
        },
        {
          "teal": 238,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            221,
            222,
            223
          ]
        },
        {
          "teal": 239,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            224
          ]
        },
        {
          "teal": 240,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            225
          ]
        },
        {
          "teal": 244,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            226,
            227,
            228
          ]
        },
        {
          "teal": 248,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            229,
            230
          ]
        },
        {
          "teal": 249,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            231
          ]
        },
        {
          "teal": 250,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            232,
            233,
            234
          ]
        },
        {
          "teal": 251,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            235,
            236
          ]
        },
        {
          "teal": 252,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            237
          ]
        },
        {
          "teal": 253,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            238,
            239,
            240
          ]
        },
        {
          "teal": 254,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            241,
            242
          ]
        },
        {
          "teal": 255,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            243
          ]
        },
        {
          "teal": 258,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            244
          ]
        },
        {
          "teal": 261,
          "source": "tests/contracts/binary.algo.ts:34",
          "pc": [
            245
          ]
        },
        {
          "teal": 262,
          "source": "tests/contracts/binary.algo.ts:33",
          "pc": [
            246
          ]
        },
        {
          "teal": 265,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            247
          ]
        },
        {
          "teal": 266,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            248
          ]
        },
        {
          "teal": 269,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            249,
            250,
            251,
            252,
            253,
            254
          ]
        },
        {
          "teal": 270,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            255,
            256,
            257
          ]
        },
        {
          "teal": 271,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            258,
            259,
            260,
            261
          ]
        },
        {
          "teal": 274,
          "source": "tests/contracts/binary.algo.ts:4",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            262
          ]
        },
        {
          "teal": 277,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            263,
            264,
            265,
            266,
            267,
            268
          ]
        },
        {
          "teal": 278,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            269,
            270,
            271,
            272,
            273,
            274
          ]
        },
        {
          "teal": 279,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            275,
            276,
            277,
            278,
            279,
            280
          ]
        },
        {
          "teal": 280,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            281,
            282,
            283,
            284,
            285,
            286
          ]
        },
        {
          "teal": 281,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            287,
            288,
            289,
            290,
            291,
            292
          ]
        },
        {
          "teal": 282,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            293,
            294,
            295,
            296,
            297,
            298
          ]
        },
        {
          "teal": 283,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            299,
            300,
            301,
            302,
            303,
            304
          ]
        },
        {
          "teal": 284,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            305,
            306,
            307,
            308,
            309,
            310
          ]
        },
        {
          "teal": 285,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            311,
            312,
            313
          ]
        },
        {
          "teal": 286,
          "source": "tests/contracts/binary.algo.ts:4",
          "pc": [
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331
          ]
        },
        {
          "teal": 289,
          "source": "tests/contracts/binary.algo.ts:4",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            332
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNi4yCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIHRlbiBsaW5lcyBvZiBURUFMIGhhbmRsZSBpbml0aWFsIHByb2dyYW0gZmxvdwovLyBUaGlzIHBhdHRlcm4gaXMgdXNlZCB0byBtYWtlIGl0IGVhc3kgZm9yIGFueW9uZSB0byBwYXJzZSB0aGUgc3RhcnQgb2YgdGhlIHByb2dyYW0gYW5kIGRldGVybWluZSBpZiBhIHNwZWNpZmljIGFjdGlvbiBpcyBhbGxvd2VkCi8vIEhlcmUsIGFjdGlvbiByZWZlcnMgdG8gdGhlIE9uQ29tcGxldGUgaW4gY29tYmluYXRpb24gd2l0aCB3aGV0aGVyIHRoZSBhcHAgaXMgYmVpbmcgY3JlYXRlZCBvciBjYWxsZWQKLy8gRXZlcnkgcG9zc2libGUgYWN0aW9uIGZvciB0aGlzIGNvbnRyYWN0IGlzIHJlcHJlc2VudGVkIGluIHRoZSBzd2l0Y2ggc3RhdGVtZW50Ci8vIElmIHRoZSBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoZSBjb250cmFjdCwgaXRzIHJlc3BlY3RpdmUgYnJhbmNoIHdpbGwgYmUgIipOT1RfSU1QTEVNRU5URUQiIHdoaWNoIGp1c3QgY29udGFpbnMgImVyciIKdHhuIEFwcGxpY2F0aW9uSUQKIQpwdXNoaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gYW5kKHVpbnQ2NCx1aW50NjQpdm9pZAoqYWJpX3JvdXRlX2FuZDoKCS8vIGI6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoKCS8vIGE6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgYW5kKHVpbnQ2NCx1aW50NjQpdm9pZAoJY2FsbHN1YiBhbmQKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGFuZChhOiB1aW50NjQsIGI6IHVpbnQ2NCk6IHZvaWQKYW5kOgoJcHJvdG8gMiAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2JpbmFyeS5hbGdvLnRzOjYKCS8vIGFzc2VydChhICYmIGIpCglmcmFtZV9kaWcgLTEgLy8gYTogdWludDY0CglkdXAKCWJ6ICpza2lwX2FuZDAKCWZyYW1lX2RpZyAtMiAvLyBiOiB1aW50NjQKCSYmCgoqc2tpcF9hbmQwOgoJYXNzZXJ0CglyZXRzdWIKCi8vIG9yKHVpbnQ2NCx1aW50NjQpdm9pZAoqYWJpX3JvdXRlX29yOgoJLy8gYjogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gYTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBvcih1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgb3IKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIG9yKGE6IHVpbnQ2NCwgYjogdWludDY0KTogdm9pZApvcjoKCXByb3RvIDIgMAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9iaW5hcnkuYWxnby50czoxMAoJLy8gYXNzZXJ0KGEgfHwgYikKCWZyYW1lX2RpZyAtMSAvLyBhOiB1aW50NjQKCWR1cAoJYm56ICpza2lwX29yMAoJZnJhbWVfZGlnIC0yIC8vIGI6IHVpbnQ2NAoJfHwKCipza2lwX29yMDoKCWFzc2VydAoJcmV0c3ViCgovLyBlcXVhbCh1aW50NjQsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9lcXVhbDoKCS8vIGI6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoKCS8vIGE6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgZXF1YWwodWludDY0LHVpbnQ2NCl2b2lkCgljYWxsc3ViIGVxdWFsCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBlcXVhbChhOiB1aW50NjQsIGI6IHVpbnQ2NCk6IHZvaWQKZXF1YWw6Cglwcm90byAyIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYmluYXJ5LmFsZ28udHM6MTQKCS8vIGFzc2VydChhID09PSBiKQoJZnJhbWVfZGlnIC0xIC8vIGE6IHVpbnQ2NAoJZnJhbWVfZGlnIC0yIC8vIGI6IHVpbnQ2NAoJPT0KCWFzc2VydAoJcmV0c3ViCgovLyBub3RFcXVhbCh1aW50NjQsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9ub3RFcXVhbDoKCS8vIGI6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoKCS8vIGE6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgbm90RXF1YWwodWludDY0LHVpbnQ2NCl2b2lkCgljYWxsc3ViIG5vdEVxdWFsCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBub3RFcXVhbChhOiB1aW50NjQsIGI6IHVpbnQ2NCk6IHZvaWQKbm90RXF1YWw6Cglwcm90byAyIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYmluYXJ5LmFsZ28udHM6MTgKCS8vIGFzc2VydChhICE9PSBiKQoJZnJhbWVfZGlnIC0xIC8vIGE6IHVpbnQ2NAoJZnJhbWVfZGlnIC0yIC8vIGI6IHVpbnQ2NAoJIT0KCWFzc2VydAoJcmV0c3ViCgovLyBiaXRBbmQodWludDY0LHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfYml0QW5kOgoJLy8gYjogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gYTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBiaXRBbmQodWludDY0LHVpbnQ2NCl2b2lkCgljYWxsc3ViIGJpdEFuZAoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gYml0QW5kKGE6IHVpbnQ2NCwgYjogdWludDY0KTogdm9pZApiaXRBbmQ6Cglwcm90byAyIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYmluYXJ5LmFsZ28udHM6MjIKCS8vIGFzc2VydChhICYgYikKCWZyYW1lX2RpZyAtMSAvLyBhOiB1aW50NjQKCWZyYW1lX2RpZyAtMiAvLyBiOiB1aW50NjQKCSYKCWFzc2VydAoJcmV0c3ViCgovLyBiaXRPcih1aW50NjQsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9iaXRPcjoKCS8vIGI6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoKCS8vIGE6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgYml0T3IodWludDY0LHVpbnQ2NCl2b2lkCgljYWxsc3ViIGJpdE9yCglpbnRjIDAgLy8gMQoJcmV0dXJuCgovLyBiaXRPcihhOiB1aW50NjQsIGI6IHVpbnQ2NCk6IHZvaWQKYml0T3I6Cglwcm90byAyIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYmluYXJ5LmFsZ28udHM6MjYKCS8vIGFzc2VydChhIHwgYikKCWZyYW1lX2RpZyAtMSAvLyBhOiB1aW50NjQKCWZyYW1lX2RpZyAtMiAvLyBiOiB1aW50NjQKCXwKCWFzc2VydAoJcmV0c3ViCgovLyBiaXRYb3IodWludDY0LHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfYml0WG9yOgoJLy8gYjogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gYTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBiaXRYb3IodWludDY0LHVpbnQ2NCl2b2lkCgljYWxsc3ViIGJpdFhvcgoJaW50YyAwIC8vIDEKCXJldHVybgoKLy8gYml0WG9yKGE6IHVpbnQ2NCwgYjogdWludDY0KTogdm9pZApiaXRYb3I6Cglwcm90byAyIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvYmluYXJ5LmFsZ28udHM6MzAKCS8vIGFzc2VydChhIF4gYikKCWZyYW1lX2RpZyAtMSAvLyBhOiB1aW50NjQKCWZyYW1lX2RpZyAtMiAvLyBiOiB1aW50NjQKCV4KCWFzc2VydAoJcmV0c3ViCgovLyBjb21ibyh1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfY29tYm86CgkvLyBjOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWJ0b2kKCgkvLyBiOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCgkvLyBhOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIGNvbWJvKHVpbnQ2NCx1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgY29tYm8KCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGNvbWJvKGE6IHVpbnQ2NCwgYjogdWludDY0LCBjOiB1aW50NjQpOiB2b2lkCmNvbWJvOgoJcHJvdG8gMyAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2JpbmFyeS5hbGdvLnRzOjM0CgkvLyBhc3NlcnQoYSB8fCAoYiAmJiBjKSkKCWZyYW1lX2RpZyAtMSAvLyBhOiB1aW50NjQKCWR1cAoJYm56ICpza2lwX29yMQoJZnJhbWVfZGlnIC0yIC8vIGI6IHVpbnQ2NAoJZHVwCglieiAqc2tpcF9hbmQxCglmcmFtZV9kaWcgLTMgLy8gYzogdWludDY0CgkmJgoKKnNraXBfYW5kMToKCXx8Cgoqc2tpcF9vcjE6Cglhc3NlcnQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMCAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHg2ZmQxM2ExMyAvLyBtZXRob2QgImFuZCh1aW50NjQsdWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHg3MDBhYTg4NyAvLyBtZXRob2QgIm9yKHVpbnQ2NCx1aW50NjQpdm9pZCIKCXB1c2hieXRlcyAweDcyM2M4N2VmIC8vIG1ldGhvZCAiZXF1YWwodWludDY0LHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZTdmZmI5ZDMgLy8gbWV0aG9kICJub3RFcXVhbCh1aW50NjQsdWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHg5Mjg1MTg4ZSAvLyBtZXRob2QgImJpdEFuZCh1aW50NjQsdWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHg1OTJkYzczZiAvLyBtZXRob2QgImJpdE9yKHVpbnQ2NCx1aW50NjQpdm9pZCIKCXB1c2hieXRlcyAweDZkNDY1MDRhIC8vIG1ldGhvZCAiYml0WG9yKHVpbnQ2NCx1aW50NjQpdm9pZCIKCXB1c2hieXRlcyAweDc0ZGM1MTUwIC8vIG1ldGhvZCAiY29tYm8odWludDY0LHVpbnQ2NCx1aW50NjQpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYW5kICphYmlfcm91dGVfb3IgKmFiaV9yb3V0ZV9lcXVhbCAqYWJpX3JvdXRlX25vdEVxdWFsICphYmlfcm91dGVfYml0QW5kICphYmlfcm91dGVfYml0T3IgKmFiaV9yb3V0ZV9iaXRYb3IgKmFiaV9yb3V0ZV9jb21ibwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiABATEYFIEGCzEZCI0MAOAAAAAAAAAAAAAAANIAAAAAAAAAAAAAADYaAhc2GgEXiAACIkOKAgCL/0lBAAOL/hBEiTYaAhc2GgEXiAACIkOKAgCL/0lAAAOL/hFEiTYaAhc2GgEXiAACIkOKAgCL/4v+EkSJNhoCFzYaAReIAAIiQ4oCAIv/i/4TRIk2GgIXNhoBF4gAAiJDigIAi/+L/hpEiTYaAhc2GgEXiAACIkOKAgCL/4v+GUSJNhoCFzYaAReIAAIiQ4oCAIv/i/4bRIk2GgMXNhoCFzYaAReIAAIiQ4oDAIv/SUAACov+SUEAA4v9EBFEiSJDgAS4RHs2NhoAjgH/8QCABG/ROhOABHAKqIeABHI8h++ABOf/udOABJKFGI6ABFktxz+ABG1GUEqABHTcUVA2GgCOCP7c/vf/Ev8p/0D/V/9u/4UA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}