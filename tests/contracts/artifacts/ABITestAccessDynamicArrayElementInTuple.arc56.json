{
  "name": "ABITestAccessDynamicArrayElementInTuple",
  "desc": "",
  "methods": [
    {
      "name": "accessDynamicArrayElementInTuple",
      "args": [],
      "returns": {
        "type": "uint8"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            1,
            2,
            3,
            4
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            5,
            6,
            7
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            14,
            15
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            16
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:672",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            43
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            44,
            45,
            46,
            47,
            48,
            49
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            50,
            51,
            52
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            53
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            54
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            55
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            56,
            57
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            58
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:673",
          "errorMessage": "accessDynamicArrayElementInTuple return value overflowed 8 bits",
          "pc": [
            59
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            60,
            61,
            62
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            63
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            64
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            65
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            66
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            70
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            71
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            72
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            73,
            74,
            75,
            76
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            77,
            78,
            79,
            80
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            81,
            82,
            83
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            84,
            85,
            86,
            87,
            88,
            89,
            90
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            91,
            92,
            93
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            94
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            95
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:674",
          "pc": [
            96,
            97
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            100,
            101
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            102,
            103
          ]
        },
        {
          "teal": 73,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            104
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            105
          ]
        },
        {
          "teal": 75,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            106
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            107
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            108
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            109
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            112
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            113
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            114
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:676",
          "pc": [
            115
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            116,
            117
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/abi.algo.ts:673",
          "pc": [
            118
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            119
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            120
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            121,
            122,
            123,
            124,
            125,
            126
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            127,
            128,
            129
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            130,
            131,
            132,
            133
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/abi.algo.ts:672",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            134
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            135,
            136,
            137,
            138,
            139,
            140
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            141,
            142,
            143
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            144,
            145,
            146,
            147
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/abi.algo.ts:672",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            148
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            149,
            150,
            151
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            152,
            153
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            154,
            155
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            156
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            157,
            158
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            159,
            160
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            161
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            162,
            163,
            164
          ]
        },
        {
          "teal": 120,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            165,
            166
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            167,
            168
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            169
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            170,
            171
          ]
        },
        {
          "teal": 124,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            172,
            173
          ]
        },
        {
          "teal": 125,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            174
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            175
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            176,
            177
          ]
        },
        {
          "teal": 128,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            178
          ]
        },
        {
          "teal": 129,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            179
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            180
          ]
        },
        {
          "teal": 131,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            181,
            182,
            183
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            184,
            185
          ]
        },
        {
          "teal": 133,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            186,
            187
          ]
        },
        {
          "teal": 134,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            188
          ]
        },
        {
          "teal": 135,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            189
          ]
        },
        {
          "teal": 136,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            190,
            191
          ]
        },
        {
          "teal": 137,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            192,
            193
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            194,
            195
          ]
        },
        {
          "teal": 139,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            196,
            197
          ]
        },
        {
          "teal": 140,
          "source": "tests/contracts/abi.algo.ts:672",
          "pc": [
            198
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDIKYnl0ZWNibG9jayAweAoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMQovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKcHVzaGludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGFjY2Vzc0R5bmFtaWNBcnJheUVsZW1lbnRJblR1cGxlKCl1aW50OAoqYWJpX3JvdXRlX2FjY2Vzc0R5bmFtaWNBcnJheUVsZW1lbnRJblR1cGxlOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgYWNjZXNzRHluYW1pY0FycmF5RWxlbWVudEluVHVwbGUoKXVpbnQ4CgljYWxsc3ViIGFjY2Vzc0R5bmFtaWNBcnJheUVsZW1lbnRJblR1cGxlCglpdG9iCglkdXAKCWJpdGxlbgoJcHVzaGludCA4Cgk8PQoKCS8vIGFjY2Vzc0R5bmFtaWNBcnJheUVsZW1lbnRJblR1cGxlIHJldHVybiB2YWx1ZSBvdmVyZmxvd2VkIDggYml0cwoJYXNzZXJ0CglleHRyYWN0IDcgMQoJY29uY2F0Cglsb2cKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIGFjY2Vzc0R5bmFtaWNBcnJheUVsZW1lbnRJblR1cGxlKCk6IHVpbnQ8OD4KYWNjZXNzRHluYW1pY0FycmF5RWxlbWVudEluVHVwbGU6Cglwcm90byAwIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMCAvLyAweAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo2NzQKCS8vIGE6IFt1aW50MTYsIHVpbnQ8OD5bXV0gPSBbMTEsIFsyMiwgMzMsIDQ0XV0KCWJ5dGVjIDAgLy8gIGluaXRpYWwgaGVhZAoJYnl0ZWMgMCAvLyAgaW5pdGlhbCB0YWlsCglwdXNoYnl0ZXMgMHgwMDA0IC8vIGluaXRpYWwgaGVhZCBvZmZzZXQKCXB1c2hieXRlcyAweDAwMGIKCWNhbGxzdWIgKnByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXB1c2hieXRlcyAweDAwMDMxNjIxMmMKCWNhbGxzdWIgKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWZyYW1lX2J1cnkgMCAvLyBhOiBbdWludDE2LCB1aW50PDg+W11dCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjY3NgoJLy8gcmV0dXJuIGFbMV1bMV07CglmcmFtZV9kaWcgMCAvLyBhOiBbdWludDE2LCB1aW50PDg+W11dCglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50YyAxIC8vIDIKCWV4dHJhY3RfdWludDE2CglpbnRjIDAgLy8gIGFjYyAqIHR5cGVMZW5ndGgKCSsKCWludGMgMSAvLyAyCgkrIC8vIGFkZCB0d28gZm9yIGxlbmd0aAoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJc3dhcAoJaW50YyAwIC8vIDEKCWV4dHJhY3QzCglidG9pCgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDAgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4ZjhlNTE3Y2UgLy8gbWV0aG9kICJhY2Nlc3NEeW5hbWljQXJyYXlFbGVtZW50SW5UdXBsZSgpdWludDgiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2FjY2Vzc0R5bmFtaWNBcnJheUVsZW1lbnRJblR1cGxlCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJyCgoqcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudDoKCXByb3RvIDQgMwoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMSAvLyBlbGVtZW50Cgljb25jYXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1YgoKKnByb2Nlc3NfZHluYW1pY190dXBsZV9lbGVtZW50OgoJcHJvdG8gNCAzCglmcmFtZV9kaWcgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0Cgljb25jYXQKCWZyYW1lX2J1cnkgLTQgLy8gdHVwbGUgaGVhZAoJZnJhbWVfZGlnIC0xIC8vIGVsZW1lbnQKCWR1cAoJbGVuCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCWJ0b2kKCSsKCWl0b2IKCWV4dHJhY3QgNiAyCglmcmFtZV9idXJ5IC0yIC8vIGhlYWQgb2Zmc2V0CglmcmFtZV9kaWcgLTMgLy8gdHVwbGUgdGFpbAoJc3dhcAoJY29uY2F0CglmcmFtZV9idXJ5IC0zIC8vIHR1cGxlIHRhaWwKCWZyYW1lX2RpZyAtNCAvLyB0dXBsZSBoZWFkCglmcmFtZV9kaWcgLTMgLy8gdHVwbGUgdGFpbAoJZnJhbWVfZGlnIC0yIC8vIGhlYWQgb2Zmc2V0CglyZXRzdWI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiACAQImAQAxGBSBBgsxGQiNDABcAAAAAAAAAAAAAABOAAAAAAAAAAAAAACABBUffHWIAA4WSZOBCA5EVwcBULAiQ4oAASgoKIACAASAAgALiABBgAUAAxYhLIgAREhQjACLADX/NP8jWSIIIwg0/0wiWBeMAIkiQ4AEuER7NjYaAI4B//EAgAT45RfONhoAjgH/mACKBAOL/Iv/UIv9i/6JigQDi/yL/lCM/Iv/SRWL/hcIFlcGAoz+i/1MUIz9i/yL/Yv+iQ==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}