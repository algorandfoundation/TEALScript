{
  "name": "AccountTest",
  "desc": "",
  "methods": [
    {
      "name": "hasAsset",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "assetBalance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "assetFrozen",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "hasBalance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "balance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "minBalance",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "authAddr",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalNumUint",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalNumByteSlice",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalExtraAppPages",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAppsCreated",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAppsOptedIn",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAssetsCreated",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalAssets",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalBoxes",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "totalBoxBytes",
      "args": [
        {
          "name": "a",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            6,
            7
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            8
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            9,
            10
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            11
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            12,
            13
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            14
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/account.algo.ts:4",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            41
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            42,
            43,
            44
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            45
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            46
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            47
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            48
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/account.algo.ts:5",
          "errorMessage": "argument 0 (a) for hasAsset must be a address",
          "pc": [
            49
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            50,
            51,
            52
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            53
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            54
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            55,
            56,
            57
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/account.algo.ts:6",
          "pc": [
            58,
            59
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/account.algo.ts:6",
          "pc": [
            60
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/account.algo.ts:6",
          "pc": [
            61,
            62
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/account.algo.ts:6",
          "pc": [
            63
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/account.algo.ts:6",
          "pc": [
            64
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/account.algo.ts:6",
          "pc": [
            65
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/account.algo.ts:5",
          "pc": [
            66
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            67,
            68,
            69
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            70
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            71
          ]
        },
        {
          "teal": 63,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            72
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            73
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/account.algo.ts:9",
          "errorMessage": "argument 0 (a) for assetBalance must be a address",
          "pc": [
            74
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            75,
            76,
            77
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            78
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            79
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            80,
            81,
            82
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/account.algo.ts:10",
          "pc": [
            83,
            84
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/account.algo.ts:10",
          "pc": [
            85
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/account.algo.ts:10",
          "pc": [
            86,
            87
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/account.algo.ts:10",
          "pc": [
            88
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/account.algo.ts:10",
          "pc": [
            89
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/account.algo.ts:9",
          "pc": [
            90
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            91,
            92,
            93
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            94
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            95
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            96
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            97
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/account.algo.ts:13",
          "errorMessage": "argument 0 (a) for assetFrozen must be a address",
          "pc": [
            98
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            99,
            100,
            101
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            102
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            103
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            104,
            105,
            106
          ]
        },
        {
          "teal": 110,
          "source": "tests/contracts/account.algo.ts:14",
          "pc": [
            107,
            108
          ]
        },
        {
          "teal": 111,
          "source": "tests/contracts/account.algo.ts:14",
          "pc": [
            109
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/account.algo.ts:14",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/account.algo.ts:14",
          "pc": [
            112
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/account.algo.ts:14",
          "pc": [
            113
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/account.algo.ts:13",
          "pc": [
            114
          ]
        },
        {
          "teal": 120,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            115,
            116,
            117
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            118
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            119
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            120
          ]
        },
        {
          "teal": 124,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            121
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/account.algo.ts:17",
          "errorMessage": "argument 0 (a) for hasBalance must be a address",
          "pc": [
            122
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            123,
            124,
            125
          ]
        },
        {
          "teal": 131,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            126
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            127
          ]
        },
        {
          "teal": 136,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            128,
            129,
            130
          ]
        },
        {
          "teal": 140,
          "source": "tests/contracts/account.algo.ts:18",
          "pc": [
            131,
            132
          ]
        },
        {
          "teal": 141,
          "source": "tests/contracts/account.algo.ts:18",
          "pc": [
            133,
            134
          ]
        },
        {
          "teal": 142,
          "source": "tests/contracts/account.algo.ts:18",
          "pc": [
            135
          ]
        },
        {
          "teal": 143,
          "source": "tests/contracts/account.algo.ts:18",
          "pc": [
            136
          ]
        },
        {
          "teal": 144,
          "source": "tests/contracts/account.algo.ts:18",
          "pc": [
            137
          ]
        },
        {
          "teal": 145,
          "source": "tests/contracts/account.algo.ts:17",
          "pc": [
            138
          ]
        },
        {
          "teal": 150,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            139,
            140,
            141
          ]
        },
        {
          "teal": 151,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            142
          ]
        },
        {
          "teal": 152,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            143
          ]
        },
        {
          "teal": 153,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            144
          ]
        },
        {
          "teal": 154,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            145
          ]
        },
        {
          "teal": 157,
          "source": "tests/contracts/account.algo.ts:21",
          "errorMessage": "argument 0 (a) for balance must be a address",
          "pc": [
            146
          ]
        },
        {
          "teal": 160,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            147,
            148,
            149
          ]
        },
        {
          "teal": 161,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            150
          ]
        },
        {
          "teal": 162,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            151
          ]
        },
        {
          "teal": 166,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            152,
            153,
            154
          ]
        },
        {
          "teal": 170,
          "source": "tests/contracts/account.algo.ts:22",
          "pc": [
            155,
            156
          ]
        },
        {
          "teal": 171,
          "source": "tests/contracts/account.algo.ts:22",
          "pc": [
            157,
            158
          ]
        },
        {
          "teal": 172,
          "source": "tests/contracts/account.algo.ts:22",
          "pc": [
            159
          ]
        },
        {
          "teal": 173,
          "source": "tests/contracts/account.algo.ts:22",
          "pc": [
            160
          ]
        },
        {
          "teal": 174,
          "source": "tests/contracts/account.algo.ts:21",
          "pc": [
            161
          ]
        },
        {
          "teal": 179,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            162,
            163,
            164
          ]
        },
        {
          "teal": 180,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            165
          ]
        },
        {
          "teal": 181,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            166
          ]
        },
        {
          "teal": 182,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            167
          ]
        },
        {
          "teal": 183,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            168
          ]
        },
        {
          "teal": 186,
          "source": "tests/contracts/account.algo.ts:25",
          "errorMessage": "argument 0 (a) for minBalance must be a address",
          "pc": [
            169
          ]
        },
        {
          "teal": 189,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            170,
            171,
            172
          ]
        },
        {
          "teal": 190,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            173
          ]
        },
        {
          "teal": 191,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            174
          ]
        },
        {
          "teal": 195,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            175,
            176,
            177
          ]
        },
        {
          "teal": 199,
          "source": "tests/contracts/account.algo.ts:26",
          "pc": [
            178,
            179
          ]
        },
        {
          "teal": 200,
          "source": "tests/contracts/account.algo.ts:26",
          "pc": [
            180,
            181
          ]
        },
        {
          "teal": 201,
          "source": "tests/contracts/account.algo.ts:26",
          "pc": [
            182
          ]
        },
        {
          "teal": 202,
          "source": "tests/contracts/account.algo.ts:26",
          "pc": [
            183
          ]
        },
        {
          "teal": 203,
          "source": "tests/contracts/account.algo.ts:25",
          "pc": [
            184
          ]
        },
        {
          "teal": 208,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            185,
            186,
            187
          ]
        },
        {
          "teal": 209,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            188
          ]
        },
        {
          "teal": 210,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            189
          ]
        },
        {
          "teal": 211,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            190
          ]
        },
        {
          "teal": 212,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            191
          ]
        },
        {
          "teal": 215,
          "source": "tests/contracts/account.algo.ts:29",
          "errorMessage": "argument 0 (a) for authAddr must be a address",
          "pc": [
            192
          ]
        },
        {
          "teal": 218,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            193,
            194,
            195
          ]
        },
        {
          "teal": 219,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            196
          ]
        },
        {
          "teal": 220,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            197
          ]
        },
        {
          "teal": 224,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            198,
            199,
            200
          ]
        },
        {
          "teal": 228,
          "source": "tests/contracts/account.algo.ts:30",
          "pc": [
            201,
            202
          ]
        },
        {
          "teal": 229,
          "source": "tests/contracts/account.algo.ts:30",
          "pc": [
            203,
            204
          ]
        },
        {
          "teal": 230,
          "source": "tests/contracts/account.algo.ts:30",
          "pc": [
            205
          ]
        },
        {
          "teal": 231,
          "source": "tests/contracts/account.algo.ts:30",
          "pc": [
            206
          ]
        },
        {
          "teal": 232,
          "source": "tests/contracts/account.algo.ts:29",
          "pc": [
            207
          ]
        },
        {
          "teal": 237,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            208,
            209,
            210
          ]
        },
        {
          "teal": 238,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            211
          ]
        },
        {
          "teal": 239,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            212
          ]
        },
        {
          "teal": 240,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            213
          ]
        },
        {
          "teal": 241,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            214
          ]
        },
        {
          "teal": 244,
          "source": "tests/contracts/account.algo.ts:33",
          "errorMessage": "argument 0 (a) for totalNumUint must be a address",
          "pc": [
            215
          ]
        },
        {
          "teal": 247,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            216,
            217,
            218
          ]
        },
        {
          "teal": 248,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            219
          ]
        },
        {
          "teal": 249,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            220
          ]
        },
        {
          "teal": 253,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            221,
            222,
            223
          ]
        },
        {
          "teal": 257,
          "source": "tests/contracts/account.algo.ts:34",
          "pc": [
            224,
            225
          ]
        },
        {
          "teal": 258,
          "source": "tests/contracts/account.algo.ts:34",
          "pc": [
            226,
            227
          ]
        },
        {
          "teal": 259,
          "source": "tests/contracts/account.algo.ts:34",
          "pc": [
            228
          ]
        },
        {
          "teal": 260,
          "source": "tests/contracts/account.algo.ts:34",
          "pc": [
            229
          ]
        },
        {
          "teal": 261,
          "source": "tests/contracts/account.algo.ts:33",
          "pc": [
            230
          ]
        },
        {
          "teal": 266,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            231,
            232,
            233
          ]
        },
        {
          "teal": 267,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            234
          ]
        },
        {
          "teal": 268,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            235
          ]
        },
        {
          "teal": 269,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            236
          ]
        },
        {
          "teal": 270,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            237
          ]
        },
        {
          "teal": 273,
          "source": "tests/contracts/account.algo.ts:37",
          "errorMessage": "argument 0 (a) for totalNumByteSlice must be a address",
          "pc": [
            238
          ]
        },
        {
          "teal": 276,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            239,
            240,
            241
          ]
        },
        {
          "teal": 277,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            242
          ]
        },
        {
          "teal": 278,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            243
          ]
        },
        {
          "teal": 282,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            244,
            245,
            246
          ]
        },
        {
          "teal": 286,
          "source": "tests/contracts/account.algo.ts:38",
          "pc": [
            247,
            248
          ]
        },
        {
          "teal": 287,
          "source": "tests/contracts/account.algo.ts:38",
          "pc": [
            249,
            250
          ]
        },
        {
          "teal": 288,
          "source": "tests/contracts/account.algo.ts:38",
          "pc": [
            251
          ]
        },
        {
          "teal": 289,
          "source": "tests/contracts/account.algo.ts:38",
          "pc": [
            252
          ]
        },
        {
          "teal": 290,
          "source": "tests/contracts/account.algo.ts:37",
          "pc": [
            253
          ]
        },
        {
          "teal": 295,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            254,
            255,
            256
          ]
        },
        {
          "teal": 296,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            257
          ]
        },
        {
          "teal": 297,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            258
          ]
        },
        {
          "teal": 298,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            259
          ]
        },
        {
          "teal": 299,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            260
          ]
        },
        {
          "teal": 302,
          "source": "tests/contracts/account.algo.ts:41",
          "errorMessage": "argument 0 (a) for totalExtraAppPages must be a address",
          "pc": [
            261
          ]
        },
        {
          "teal": 305,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            262,
            263,
            264
          ]
        },
        {
          "teal": 306,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            265
          ]
        },
        {
          "teal": 307,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            266
          ]
        },
        {
          "teal": 311,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            267,
            268,
            269
          ]
        },
        {
          "teal": 315,
          "source": "tests/contracts/account.algo.ts:42",
          "pc": [
            270,
            271
          ]
        },
        {
          "teal": 316,
          "source": "tests/contracts/account.algo.ts:42",
          "pc": [
            272,
            273
          ]
        },
        {
          "teal": 317,
          "source": "tests/contracts/account.algo.ts:42",
          "pc": [
            274
          ]
        },
        {
          "teal": 318,
          "source": "tests/contracts/account.algo.ts:42",
          "pc": [
            275
          ]
        },
        {
          "teal": 319,
          "source": "tests/contracts/account.algo.ts:41",
          "pc": [
            276
          ]
        },
        {
          "teal": 324,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            277,
            278,
            279
          ]
        },
        {
          "teal": 325,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            280
          ]
        },
        {
          "teal": 326,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            281
          ]
        },
        {
          "teal": 327,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            282
          ]
        },
        {
          "teal": 328,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            283
          ]
        },
        {
          "teal": 331,
          "source": "tests/contracts/account.algo.ts:45",
          "errorMessage": "argument 0 (a) for totalAppsCreated must be a address",
          "pc": [
            284
          ]
        },
        {
          "teal": 334,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            285,
            286,
            287
          ]
        },
        {
          "teal": 335,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            288
          ]
        },
        {
          "teal": 336,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            289
          ]
        },
        {
          "teal": 340,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            290,
            291,
            292
          ]
        },
        {
          "teal": 344,
          "source": "tests/contracts/account.algo.ts:46",
          "pc": [
            293,
            294
          ]
        },
        {
          "teal": 345,
          "source": "tests/contracts/account.algo.ts:46",
          "pc": [
            295,
            296
          ]
        },
        {
          "teal": 346,
          "source": "tests/contracts/account.algo.ts:46",
          "pc": [
            297
          ]
        },
        {
          "teal": 347,
          "source": "tests/contracts/account.algo.ts:46",
          "pc": [
            298
          ]
        },
        {
          "teal": 348,
          "source": "tests/contracts/account.algo.ts:45",
          "pc": [
            299
          ]
        },
        {
          "teal": 353,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            300,
            301,
            302
          ]
        },
        {
          "teal": 354,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            303
          ]
        },
        {
          "teal": 355,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            304
          ]
        },
        {
          "teal": 356,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            305
          ]
        },
        {
          "teal": 357,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            306
          ]
        },
        {
          "teal": 360,
          "source": "tests/contracts/account.algo.ts:49",
          "errorMessage": "argument 0 (a) for totalAppsOptedIn must be a address",
          "pc": [
            307
          ]
        },
        {
          "teal": 363,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            308,
            309,
            310
          ]
        },
        {
          "teal": 364,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            311
          ]
        },
        {
          "teal": 365,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            312
          ]
        },
        {
          "teal": 369,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            313,
            314,
            315
          ]
        },
        {
          "teal": 373,
          "source": "tests/contracts/account.algo.ts:50",
          "pc": [
            316,
            317
          ]
        },
        {
          "teal": 374,
          "source": "tests/contracts/account.algo.ts:50",
          "pc": [
            318,
            319
          ]
        },
        {
          "teal": 375,
          "source": "tests/contracts/account.algo.ts:50",
          "pc": [
            320
          ]
        },
        {
          "teal": 376,
          "source": "tests/contracts/account.algo.ts:50",
          "pc": [
            321
          ]
        },
        {
          "teal": 377,
          "source": "tests/contracts/account.algo.ts:49",
          "pc": [
            322
          ]
        },
        {
          "teal": 382,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            323,
            324,
            325
          ]
        },
        {
          "teal": 383,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            326
          ]
        },
        {
          "teal": 384,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            327
          ]
        },
        {
          "teal": 385,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            328
          ]
        },
        {
          "teal": 386,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            329
          ]
        },
        {
          "teal": 389,
          "source": "tests/contracts/account.algo.ts:53",
          "errorMessage": "argument 0 (a) for totalAssetsCreated must be a address",
          "pc": [
            330
          ]
        },
        {
          "teal": 392,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            331,
            332,
            333
          ]
        },
        {
          "teal": 393,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            334
          ]
        },
        {
          "teal": 394,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            335
          ]
        },
        {
          "teal": 398,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            336,
            337,
            338
          ]
        },
        {
          "teal": 402,
          "source": "tests/contracts/account.algo.ts:54",
          "pc": [
            339,
            340
          ]
        },
        {
          "teal": 403,
          "source": "tests/contracts/account.algo.ts:54",
          "pc": [
            341,
            342
          ]
        },
        {
          "teal": 404,
          "source": "tests/contracts/account.algo.ts:54",
          "pc": [
            343
          ]
        },
        {
          "teal": 405,
          "source": "tests/contracts/account.algo.ts:54",
          "pc": [
            344
          ]
        },
        {
          "teal": 406,
          "source": "tests/contracts/account.algo.ts:53",
          "pc": [
            345
          ]
        },
        {
          "teal": 411,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            346,
            347,
            348
          ]
        },
        {
          "teal": 412,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            349
          ]
        },
        {
          "teal": 413,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            350
          ]
        },
        {
          "teal": 414,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            351
          ]
        },
        {
          "teal": 415,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            352
          ]
        },
        {
          "teal": 418,
          "source": "tests/contracts/account.algo.ts:57",
          "errorMessage": "argument 0 (a) for totalAssets must be a address",
          "pc": [
            353
          ]
        },
        {
          "teal": 421,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            354,
            355,
            356
          ]
        },
        {
          "teal": 422,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            357
          ]
        },
        {
          "teal": 423,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            358
          ]
        },
        {
          "teal": 427,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            359,
            360,
            361
          ]
        },
        {
          "teal": 431,
          "source": "tests/contracts/account.algo.ts:58",
          "pc": [
            362,
            363
          ]
        },
        {
          "teal": 432,
          "source": "tests/contracts/account.algo.ts:58",
          "pc": [
            364,
            365
          ]
        },
        {
          "teal": 433,
          "source": "tests/contracts/account.algo.ts:58",
          "pc": [
            366
          ]
        },
        {
          "teal": 434,
          "source": "tests/contracts/account.algo.ts:58",
          "pc": [
            367
          ]
        },
        {
          "teal": 435,
          "source": "tests/contracts/account.algo.ts:57",
          "pc": [
            368
          ]
        },
        {
          "teal": 440,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            369,
            370,
            371
          ]
        },
        {
          "teal": 441,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            372
          ]
        },
        {
          "teal": 442,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            373
          ]
        },
        {
          "teal": 443,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            374
          ]
        },
        {
          "teal": 444,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            375
          ]
        },
        {
          "teal": 447,
          "source": "tests/contracts/account.algo.ts:61",
          "errorMessage": "argument 0 (a) for totalBoxes must be a address",
          "pc": [
            376
          ]
        },
        {
          "teal": 450,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            377,
            378,
            379
          ]
        },
        {
          "teal": 451,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            380
          ]
        },
        {
          "teal": 452,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            381
          ]
        },
        {
          "teal": 456,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            382,
            383,
            384
          ]
        },
        {
          "teal": 460,
          "source": "tests/contracts/account.algo.ts:62",
          "pc": [
            385,
            386
          ]
        },
        {
          "teal": 461,
          "source": "tests/contracts/account.algo.ts:62",
          "pc": [
            387,
            388
          ]
        },
        {
          "teal": 462,
          "source": "tests/contracts/account.algo.ts:62",
          "pc": [
            389
          ]
        },
        {
          "teal": 463,
          "source": "tests/contracts/account.algo.ts:62",
          "pc": [
            390
          ]
        },
        {
          "teal": 464,
          "source": "tests/contracts/account.algo.ts:61",
          "pc": [
            391
          ]
        },
        {
          "teal": 469,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            392,
            393,
            394
          ]
        },
        {
          "teal": 470,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            395
          ]
        },
        {
          "teal": 471,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            396
          ]
        },
        {
          "teal": 472,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            397
          ]
        },
        {
          "teal": 473,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            398
          ]
        },
        {
          "teal": 476,
          "source": "tests/contracts/account.algo.ts:65",
          "errorMessage": "argument 0 (a) for totalBoxBytes must be a address",
          "pc": [
            399
          ]
        },
        {
          "teal": 479,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            400,
            401,
            402
          ]
        },
        {
          "teal": 480,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            403
          ]
        },
        {
          "teal": 481,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            404
          ]
        },
        {
          "teal": 485,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            405,
            406,
            407
          ]
        },
        {
          "teal": 489,
          "source": "tests/contracts/account.algo.ts:66",
          "pc": [
            408,
            409
          ]
        },
        {
          "teal": 490,
          "source": "tests/contracts/account.algo.ts:66",
          "pc": [
            410,
            411
          ]
        },
        {
          "teal": 491,
          "source": "tests/contracts/account.algo.ts:66",
          "pc": [
            412
          ]
        },
        {
          "teal": 492,
          "source": "tests/contracts/account.algo.ts:66",
          "pc": [
            413
          ]
        },
        {
          "teal": 493,
          "source": "tests/contracts/account.algo.ts:65",
          "pc": [
            414
          ]
        },
        {
          "teal": 496,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            415
          ]
        },
        {
          "teal": 497,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            416
          ]
        },
        {
          "teal": 500,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            417,
            418,
            419,
            420,
            421,
            422
          ]
        },
        {
          "teal": 501,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            423,
            424,
            425
          ]
        },
        {
          "teal": 502,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            426,
            427,
            428,
            429
          ]
        },
        {
          "teal": 505,
          "source": "tests/contracts/account.algo.ts:4",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            430
          ]
        },
        {
          "teal": 508,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            431,
            432,
            433,
            434,
            435,
            436
          ]
        },
        {
          "teal": 509,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            437,
            438,
            439,
            440,
            441,
            442
          ]
        },
        {
          "teal": 510,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            443,
            444,
            445,
            446,
            447,
            448
          ]
        },
        {
          "teal": 511,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            449,
            450,
            451,
            452,
            453,
            454
          ]
        },
        {
          "teal": 512,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            455,
            456,
            457,
            458,
            459,
            460
          ]
        },
        {
          "teal": 513,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            461,
            462,
            463,
            464,
            465,
            466
          ]
        },
        {
          "teal": 514,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            467,
            468,
            469,
            470,
            471,
            472
          ]
        },
        {
          "teal": 515,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            473,
            474,
            475,
            476,
            477,
            478
          ]
        },
        {
          "teal": 516,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            479,
            480,
            481,
            482,
            483,
            484
          ]
        },
        {
          "teal": 517,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            485,
            486,
            487,
            488,
            489,
            490
          ]
        },
        {
          "teal": 518,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            491,
            492,
            493,
            494,
            495,
            496
          ]
        },
        {
          "teal": 519,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            497,
            498,
            499,
            500,
            501,
            502
          ]
        },
        {
          "teal": 520,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            503,
            504,
            505,
            506,
            507,
            508
          ]
        },
        {
          "teal": 521,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            509,
            510,
            511,
            512,
            513,
            514
          ]
        },
        {
          "teal": 522,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            515,
            516,
            517,
            518,
            519,
            520
          ]
        },
        {
          "teal": 523,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            521,
            522,
            523,
            524,
            525,
            526
          ]
        },
        {
          "teal": 524,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            527,
            528,
            529
          ]
        },
        {
          "teal": 525,
          "source": "tests/contracts/account.algo.ts:4",
          "pc": [
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563
          ]
        },
        {
          "teal": 528,
          "source": "tests/contracts/account.algo.ts:4",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            564
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADASB7MRgUgQYLMRkIjQwBhgAAAAAAAAAAAAABeAAAAAAAAAAAAAAANhoBSRUjEkSIAAIiQ4oBAIv/JHAATEhEiTYaAUkVIxJEiAACIkOKAQCL/yRwAEhEiTYaAUkVIxJEiAACIkOKAQCL/yRwAUhEiTYaAUkVIxJEiAACIkOKAQCL/3MATEhEiTYaAUkVIxJEiAACIkOKAQCL/3MASESJNhoBSRUjEkSIAAIiQ4oBAIv/cwFIRIk2GgFJFSMSRIgAAiJDigEAi/9zAkiwiTYaAUkVIxJEiAACIkOKAQCL/3MDSESJNhoBSRUjEkSIAAIiQ4oBAIv/cwRIRIk2GgFJFSMSRIgAAiJDigEAi/9zBUhEiTYaAUkVIxJEiAACIkOKAQCL/3MGSESJNhoBSRUjEkSIAAIiQ4oBAIv/cwdIRIk2GgFJFSMSRIgAAiJDigEAi/9zCEhEiTYaAUkVIxJEiAACIkOKAQCL/3MJSESJNhoBSRUjEkSIAAIiQ4oBAIv/cwpIRIk2GgFJFSMSRIgAAiJDigEAi/9zC0hEiSJDgAS4RHs2NhoAjgH/8QCABKo4rpGABGTLBmGABGjRjduABCq/Ht6ABImeR52ABCWKD8qABL7MIYOABPuB4QmABETSFeGABEs7/vOABAka0qqABLm/P5WABE+NLSyABBPUo32ABPyHI9qABMTMXpU2GgCOEP32/g/+J/4//lf+bv6F/pz+s/7K/uH++P8P/yb/Pf9UAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}