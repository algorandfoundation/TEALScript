{
  "name": "ABITestTxnTypes",
  "desc": "",
  "methods": [
    {
      "name": "txnTypes",
      "args": [
        {
          "name": "t",
          "type": "txn"
        },
        {
          "name": "a",
          "type": "appl"
        },
        {
          "name": "ac",
          "type": "acfg"
        },
        {
          "name": "af",
          "type": "afrz"
        },
        {
          "name": "at",
          "type": "axfer"
        },
        {
          "name": "kr",
          "type": "keyreg"
        },
        {
          "name": "p",
          "type": "pay"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            9,
            10
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            11
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            12
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            13
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            14,
            15
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            16
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/abi.algo.ts:716",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            43
          ]
        },
        {
          "teal": 29,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            44,
            45
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            46
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            47
          ]
        },
        {
          "teal": 32,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            48
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            49,
            50
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            51
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:724",
          "pc": [
            52
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:724",
          "errorMessage": "argument 0 (p) for txnTypes must be a pay transaction",
          "pc": [
            53
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            54,
            55
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            56
          ]
        },
        {
          "teal": 43,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            57
          ]
        },
        {
          "teal": 44,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            58
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            59,
            60
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            61
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/abi.algo.ts:723",
          "pc": [
            62
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:723",
          "errorMessage": "argument 1 (kr) for txnTypes must be a keyreg transaction",
          "pc": [
            63
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            64,
            65
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            66
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            67
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            68
          ]
        },
        {
          "teal": 57,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            69,
            70
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            71,
            72
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/abi.algo.ts:722",
          "pc": [
            73
          ]
        },
        {
          "teal": 62,
          "source": "tests/contracts/abi.algo.ts:722",
          "errorMessage": "argument 2 (at) for txnTypes must be a axfer transaction",
          "pc": [
            74
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            75,
            76
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            77,
            78
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            79
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            80
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            81,
            82
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            83,
            84
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:721",
          "pc": [
            85
          ]
        },
        {
          "teal": 74,
          "source": "tests/contracts/abi.algo.ts:721",
          "errorMessage": "argument 3 (af) for txnTypes must be a afrz transaction",
          "pc": [
            86
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            87,
            88
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            91
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            92
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            93,
            94
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            95
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:720",
          "pc": [
            96
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/abi.algo.ts:720",
          "errorMessage": "argument 4 (ac) for txnTypes must be a acfg transaction",
          "pc": [
            97
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            98,
            99
          ]
        },
        {
          "teal": 90,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            100
          ]
        },
        {
          "teal": 91,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            101
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            102
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            103,
            104
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            105
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/abi.algo.ts:719",
          "pc": [
            106
          ]
        },
        {
          "teal": 98,
          "source": "tests/contracts/abi.algo.ts:719",
          "errorMessage": "argument 5 (a) for txnTypes must be a appl transaction",
          "pc": [
            107
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/abi.algo.ts:718",
          "pc": [
            108,
            109
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/abi.algo.ts:718",
          "pc": [
            110,
            111
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/abi.algo.ts:718",
          "pc": [
            112
          ]
        },
        {
          "teal": 106,
          "source": "tests/contracts/abi.algo.ts:717",
          "pc": [
            113,
            114,
            115
          ]
        },
        {
          "teal": 107,
          "source": "tests/contracts/abi.algo.ts:717",
          "pc": [
            116
          ]
        },
        {
          "teal": 108,
          "source": "tests/contracts/abi.algo.ts:717",
          "pc": [
            117
          ]
        },
        {
          "teal": 112,
          "source": "tests/contracts/abi.algo.ts:717",
          "pc": [
            118,
            119,
            120
          ]
        },
        {
          "teal": 116,
          "source": "tests/contracts/abi.algo.ts:726",
          "pc": [
            121,
            122
          ]
        },
        {
          "teal": 117,
          "source": "tests/contracts/abi.algo.ts:726",
          "pc": [
            123,
            124
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/abi.algo.ts:726",
          "pc": [
            125,
            126
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/abi.algo.ts:726",
          "pc": [
            127,
            128
          ]
        },
        {
          "teal": 120,
          "source": "tests/contracts/abi.algo.ts:726",
          "pc": [
            129
          ]
        },
        {
          "teal": 121,
          "source": "tests/contracts/abi.algo.ts:726",
          "pc": [
            130
          ]
        },
        {
          "teal": 125,
          "source": "tests/contracts/abi.algo.ts:727",
          "pc": [
            131,
            132
          ]
        },
        {
          "teal": 126,
          "source": "tests/contracts/abi.algo.ts:727",
          "pc": [
            133,
            134
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/abi.algo.ts:727",
          "pc": [
            135,
            136
          ]
        },
        {
          "teal": 128,
          "source": "tests/contracts/abi.algo.ts:727",
          "pc": [
            137,
            138
          ]
        },
        {
          "teal": 129,
          "source": "tests/contracts/abi.algo.ts:727",
          "pc": [
            139
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/abi.algo.ts:727",
          "pc": [
            140
          ]
        },
        {
          "teal": 134,
          "source": "tests/contracts/abi.algo.ts:728",
          "pc": [
            141,
            142
          ]
        },
        {
          "teal": 135,
          "source": "tests/contracts/abi.algo.ts:728",
          "pc": [
            143,
            144
          ]
        },
        {
          "teal": 136,
          "source": "tests/contracts/abi.algo.ts:728",
          "pc": [
            145,
            146
          ]
        },
        {
          "teal": 137,
          "source": "tests/contracts/abi.algo.ts:728",
          "pc": [
            147,
            148
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/abi.algo.ts:728",
          "pc": [
            149
          ]
        },
        {
          "teal": 139,
          "source": "tests/contracts/abi.algo.ts:728",
          "pc": [
            150
          ]
        },
        {
          "teal": 143,
          "source": "tests/contracts/abi.algo.ts:729",
          "pc": [
            151,
            152
          ]
        },
        {
          "teal": 144,
          "source": "tests/contracts/abi.algo.ts:729",
          "pc": [
            153,
            154
          ]
        },
        {
          "teal": 145,
          "source": "tests/contracts/abi.algo.ts:729",
          "pc": [
            155,
            156
          ]
        },
        {
          "teal": 146,
          "source": "tests/contracts/abi.algo.ts:729",
          "pc": [
            157,
            158
          ]
        },
        {
          "teal": 147,
          "source": "tests/contracts/abi.algo.ts:729",
          "pc": [
            159
          ]
        },
        {
          "teal": 148,
          "source": "tests/contracts/abi.algo.ts:729",
          "pc": [
            160
          ]
        },
        {
          "teal": 149,
          "source": "tests/contracts/abi.algo.ts:717",
          "pc": [
            161
          ]
        },
        {
          "teal": 152,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            162
          ]
        },
        {
          "teal": 153,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            163
          ]
        },
        {
          "teal": 156,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            164,
            165,
            166,
            167,
            168,
            169
          ]
        },
        {
          "teal": 157,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            170,
            171,
            172
          ]
        },
        {
          "teal": 158,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            173,
            174,
            175,
            176
          ]
        },
        {
          "teal": 161,
          "source": "tests/contracts/abi.algo.ts:716",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            177
          ]
        },
        {
          "teal": 164,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            178,
            179,
            180,
            181,
            182,
            183
          ]
        },
        {
          "teal": 165,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            184,
            185,
            186
          ]
        },
        {
          "teal": 166,
          "source": "tests/contracts/abi.algo.ts:716",
          "pc": [
            187,
            188,
            189,
            190
          ]
        },
        {
          "teal": 169,
          "source": "tests/contracts/abi.algo.ts:716",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            191
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAxIDYgMiAzIDQgNQoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMwovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKaW50YyAxIC8vIDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gdHhuVHlwZXModHhuLGFwcGwsYWNmZyxhZnJ6LGF4ZmVyLGtleXJlZyxwYXkpdm9pZAoqYWJpX3JvdXRlX3R4blR5cGVzOgoJLy8gcDogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50YyAwIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMCAvLyAgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKHApIGZvciB0eG5UeXBlcyBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBrcjoga2V5cmVnCgl0eG4gR3JvdXBJbmRleAoJaW50YyAyIC8vIDIKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMiAvLyAga2V5cmVnCgk9PQoKCS8vIGFyZ3VtZW50IDEgKGtyKSBmb3IgdHhuVHlwZXMgbXVzdCBiZSBhIGtleXJlZyB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gYXQ6IGF4ZmVyCgl0eG4gR3JvdXBJbmRleAoJaW50YyAzIC8vIDMKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgNCAvLyAgYXhmZXIKCT09CgoJLy8gYXJndW1lbnQgMiAoYXQpIGZvciB0eG5UeXBlcyBtdXN0IGJlIGEgYXhmZXIgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGFmOiBhZnJ6Cgl0eG4gR3JvdXBJbmRleAoJaW50YyA0IC8vIDQKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgNSAvLyAgYWZyegoJPT0KCgkvLyBhcmd1bWVudCAzIChhZikgZm9yIHR4blR5cGVzIG11c3QgYmUgYSBhZnJ6IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBhYzogYWNmZwoJdHhuIEdyb3VwSW5kZXgKCWludGMgNSAvLyA1CgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDMgLy8gIGFjZmcKCT09CgoJLy8gYXJndW1lbnQgNCAoYWMpIGZvciB0eG5UeXBlcyBtdXN0IGJlIGEgYWNmZyB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gYTogYXBwbAoJdHhuIEdyb3VwSW5kZXgKCWludGMgMSAvLyA2CgktCglkdXAKCWd0eG5zIFR5cGVFbnVtCglpbnRjIDEgLy8gIGFwcGwKCT09CgoJLy8gYXJndW1lbnQgNSAoYSkgZm9yIHR4blR5cGVzIG11c3QgYmUgYSBhcHBsIHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyB0OiB0eG4KCXR4biBHcm91cEluZGV4CglwdXNoaW50IDcKCS0KCgkvLyBleGVjdXRlIHR4blR5cGVzKHR4bixhcHBsLGFjZmcsYWZyeixheGZlcixrZXlyZWcscGF5KXZvaWQKCWNhbGxzdWIgdHhuVHlwZXMKCWludGMgMCAvLyAxCglyZXR1cm4KCi8vIHR4blR5cGVzKHQ6IFR4biwgYTogQXBwQ2FsbFR4biwgYWM6IEFzc2V0Q29uZmlnVHhuLCBhZjogQXNzZXRGcmVlemVUeG4sIGF0OiBBc3NldFRyYW5zZmVyVHhuLCBrcjogS2V5UmVnVHhuLCBwOiBQYXlUeG4pOiB2b2lkCnR4blR5cGVzOgoJcHJvdG8gNyAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjcyNgoJLy8gYXNzZXJ0KHQuc2VuZGVyID09PSBhLnNlbmRlcikKCWZyYW1lX2RpZyAtMSAvLyB0OiBUeG4KCWd0eG5zIFNlbmRlcgoJZnJhbWVfZGlnIC0yIC8vIGE6IEFwcENhbGxUeG4KCWd0eG5zIFNlbmRlcgoJPT0KCWFzc2VydAoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czo3MjcKCS8vIGFzc2VydChhYy5zZW5kZXIgPT09IGFmLnNlbmRlcikKCWZyYW1lX2RpZyAtMyAvLyBhYzogQXNzZXRDb25maWdUeG4KCWd0eG5zIFNlbmRlcgoJZnJhbWVfZGlnIC00IC8vIGFmOiBBc3NldEZyZWV6ZVR4bgoJZ3R4bnMgU2VuZGVyCgk9PQoJYXNzZXJ0CgoJLy8gdGVzdHMvY29udHJhY3RzL2FiaS5hbGdvLnRzOjcyOAoJLy8gYXNzZXJ0KGF0LnNlbmRlciA9PT0ga3Iuc2VuZGVyKQoJZnJhbWVfZGlnIC01IC8vIGF0OiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBTZW5kZXIKCWZyYW1lX2RpZyAtNiAvLyBrcjogS2V5UmVnVHhuCglndHhucyBTZW5kZXIKCT09Cglhc3NlcnQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6NzI5CgkvLyBhc3NlcnQocC5zZW5kZXIgPT09IHQuc2VuZGVyKQoJZnJhbWVfZGlnIC03IC8vIHA6IFBheVR4bgoJZ3R4bnMgU2VuZGVyCglmcmFtZV9kaWcgLTEgLy8gdDogVHhuCglndHhucyBTZW5kZXIKCT09Cglhc3NlcnQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludGMgMCAvLyAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweGI4NDQ3YjM2IC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHg4NDAzMzdlZiAvLyBtZXRob2QgInR4blR5cGVzKHR4bixhcHBsLGFjZmcsYWZyeixheGZlcixrZXlyZWcscGF5KXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX3R4blR5cGVzCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNhbGwgTm9PcAoJZXJy",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAGAQYCAwQFMRgUIwsxGQiNDACHAAAAAAAAAAAAAAB5AAAAAAAAAAAAAAAxFiIJSTgQIhJEMRYkCUk4ECQSRDEWJQlJOBAhBBJEMRYhBAlJOBAhBRJEMRYhBQlJOBAlEkQxFiMJSTgQIxJEMRaBBwmIAAIiQ4oHAIv/OACL/jgAEkSL/TgAi/w4ABJEi/s4AIv6OAASRIv5OACL/zgAEkSJIkOABLhEezY2GgCOAf/xAIAEhAM37zYaAI4B/20A",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}