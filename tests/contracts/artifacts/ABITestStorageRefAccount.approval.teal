#pragma version 10
intcblock 1
bytecblock 0x0000000000000000 0x

// This TEAL was generated by TEALScript v0.106.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *NOT_IMPLEMENTED *call_OptIn *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// storageRefAccount()uint64
*abi_route_storageRefAccount:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// execute storageRefAccount()uint64
	callsub storageRefAccount
	itob
	concat
	log
	intc 0 // 1
	return

// storageRefAccount(): uint64
storageRefAccount:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 1 // 0x
	dup

	// tests/contracts/abi.algo.ts:1019
	// addr = this.txn.sender
	txn Sender
	frame_bury 0 // addr: address

	// tests/contracts/abi.algo.ts:1020
	// this.lMap(addr, 0).value = [1, 2, 3]
	frame_dig 0 // addr: address
	bytec 0 // 0x0000000000000000
	pushbytes 0x0003000000000000000100000000000000020000000000000003
	app_local_put

	// tests/contracts/abi.algo.ts:1021
	// r = this.lMap(addr, 0).value
	frame_dig 0 // addr: address
	frame_bury 1 // storage account//r

	// tests/contracts/abi.algo.ts:1023
	// addr = globals.zeroAddress
	global ZeroAddress
	frame_bury 0 // addr: address

	// tests/contracts/abi.algo.ts:1025
	// r[1] = 4
	frame_dig 1 // storage account//r
	bytec 0 // 0x0000000000000000
	app_local_get
	extract 2 0
	store 255 // full array
	load 255 // full array
	pushbytes 0x0000000000000004
	replace2 8
	frame_dig 1 // storage account//r
	bytec 0 // 0x0000000000000000
	uncover 2
	dup
	len
	pushint 8
	/
	itob
	extract 6 2
	swap
	concat
	app_local_put

	// tests/contracts/abi.algo.ts:1027
	// return this.lMap(this.txn.sender, 0).value[1];
	txn Sender
	bytec 0 // 0x0000000000000000
	app_local_get
	extract 2 0
	store 255 // full array
	load 255 // full array
	extract 8 8
	btoi

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

*abi_route_createApplication:
	intc 0 // 1
	return

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_OptIn:
	pushbytes 0xbe777ce6 // method "storageRefAccount()uint64"
	txna ApplicationArgs 0
	match *abi_route_storageRefAccount

	// this contract does not implement the given ABI method for call OptIn
	err