{
  "name": "ABITestBoolUpdateInObjectInBox",
  "desc": "",
  "methods": [
    {
      "name": "boolUpdateInObjectInBox",
      "args": [],
      "returns": {
        "type": "bool"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "T13": [
      {
        "name": "value",
        "type": "uint64"
      },
      {
        "name": "bool",
        "type": "bool"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "boxes": {
          "keyType": "AVMBytes",
          "valueType": "T13"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "teal": 3,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14
          ]
        },
        {
          "teal": 15,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            15,
            16
          ]
        },
        {
          "teal": 16,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            17
          ]
        },
        {
          "teal": 17,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            18,
            19
          ]
        },
        {
          "teal": 18,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            20
          ]
        },
        {
          "teal": 19,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            21,
            22
          ]
        },
        {
          "teal": 20,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            23
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/abi.algo.ts:1720",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            50
          ]
        },
        {
          "teal": 30,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            51,
            52,
            53,
            54,
            55,
            56
          ]
        },
        {
          "teal": 33,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            57,
            58,
            59
          ]
        },
        {
          "teal": 34,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            60
          ]
        },
        {
          "teal": 35,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            61
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            62,
            63
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            64
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            65
          ]
        },
        {
          "teal": 39,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            66
          ]
        },
        {
          "teal": 40,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            67
          ]
        },
        {
          "teal": 41,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            68
          ]
        },
        {
          "teal": 45,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            69,
            70,
            71
          ]
        },
        {
          "teal": 49,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            72
          ]
        },
        {
          "teal": 50,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            83
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            84
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            85
          ]
        },
        {
          "teal": 54,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            86
          ]
        },
        {
          "teal": 55,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            87
          ]
        },
        {
          "teal": 56,
          "source": "tests/contracts/abi.algo.ts:1724",
          "pc": [
            88
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            89
          ]
        },
        {
          "teal": 61,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            90
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/abi.algo.ts:1725",
          "errorMessage": "box value does not exist: this.boxes('bRef').value",
          "pc": [
            91
          ]
        },
        {
          "teal": 65,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            92,
            93
          ]
        },
        {
          "teal": 66,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            94,
            95
          ]
        },
        {
          "teal": 67,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            96
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            97
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            98
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            99
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            100
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/abi.algo.ts:1725",
          "pc": [
            101
          ]
        },
        {
          "teal": 76,
          "source": "tests/contracts/abi.algo.ts:1727",
          "pc": [
            102
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/abi.algo.ts:1727",
          "pc": [
            103
          ]
        },
        {
          "teal": 80,
          "source": "tests/contracts/abi.algo.ts:1727",
          "errorMessage": "box value does not exist: this.boxes('bRef').value",
          "pc": [
            104
          ]
        },
        {
          "teal": 81,
          "source": "tests/contracts/abi.algo.ts:1727",
          "pc": [
            105,
            106
          ]
        },
        {
          "teal": 82,
          "source": "tests/contracts/abi.algo.ts:1727",
          "pc": [
            107,
            108
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/abi.algo.ts:1727",
          "pc": [
            109
          ]
        },
        {
          "teal": 84,
          "source": "tests/contracts/abi.algo.ts:1727",
          "pc": [
            110
          ]
        },
        {
          "teal": 85,
          "source": "tests/contracts/abi.algo.ts:1723",
          "pc": [
            111
          ]
        },
        {
          "teal": 88,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            112
          ]
        },
        {
          "teal": 89,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            113
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            114,
            115,
            116,
            117,
            118,
            119
          ]
        },
        {
          "teal": 93,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            120,
            121,
            122
          ]
        },
        {
          "teal": 94,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            123,
            124,
            125,
            126
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/abi.algo.ts:1720",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            127
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            128,
            129,
            130,
            131,
            132,
            133
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            134,
            135,
            136
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/abi.algo.ts:1720",
          "pc": [
            137,
            138,
            139,
            140
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/abi.algo.ts:1720",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            141
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayAwIDEgNjQKYnl0ZWNibG9jayAweDYyNTI2NTY2IDB4MDAKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA2LjEKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCnB1c2hpbnQgNgoqCnR4biBPbkNvbXBsZXRpb24KKwpzd2l0Y2ggKmNhbGxfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBib29sVXBkYXRlSW5PYmplY3RJbkJveCgpYm9vbAoqYWJpX3JvdXRlX2Jvb2xVcGRhdGVJbk9iamVjdEluQm94OgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgYm9vbFVwZGF0ZUluT2JqZWN0SW5Cb3goKWJvb2wKCWNhbGxzdWIgYm9vbFVwZGF0ZUluT2JqZWN0SW5Cb3gKCWJ5dGVjIDEgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0Cgljb25jYXQKCWxvZwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gYm9vbFVwZGF0ZUluT2JqZWN0SW5Cb3goKTogYm9vbGVhbgpib29sVXBkYXRlSW5PYmplY3RJbkJveDoKCXByb3RvIDAgMQoKCS8vIHRlc3RzL2NvbnRyYWN0cy9hYmkuYWxnby50czoxNzI0CgkvLyB0aGlzLmJveGVzKCdiUmVmJykudmFsdWUgPSB7IHZhbHVlOiAwLCBib29sOiBmYWxzZSB9CglieXRlYyAwIC8vICAiYlJlZiIKCXB1c2hieXRlcyAweDAwMDAwMDAwMDAwMDAwMDAKCWJ5dGVjIDEgLy8gMHgwMAoJaW50YyAwIC8vIDAKCWR1cAoJc2V0Yml0Cgljb25jYXQKCWJveF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTcyNQoJLy8gdGhpcy5ib3hlcygnYlJlZicpLnZhbHVlLmJvb2wgPSB0cnVlCglieXRlYyAwIC8vICAiYlJlZiIKCWJveF9nZXQKCgkvLyBib3ggdmFsdWUgZG9lcyBub3QgZXhpc3Q6IHRoaXMuYm94ZXMoJ2JSZWYnKS52YWx1ZQoJYXNzZXJ0CglzdG9yZSAyNTUgLy8gZnVsbCBhcnJheQoJbG9hZCAyNTUgLy8gZnVsbCBhcnJheQoJaW50YyAyIC8vIDY0CglpbnRjIDEgLy8gMQoJc2V0Yml0CglieXRlYyAwIC8vICAiYlJlZiIKCXN3YXAKCWJveF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYWJpLmFsZ28udHM6MTcyNwoJLy8gcmV0dXJuIHRoaXMuYm94ZXMoJ2JSZWYnKS52YWx1ZS5ib29sOwoJYnl0ZWMgMCAvLyAgImJSZWYiCglib3hfZ2V0CgoJLy8gYm94IHZhbHVlIGRvZXMgbm90IGV4aXN0OiB0aGlzLmJveGVzKCdiUmVmJykudmFsdWUKCWFzc2VydAoJc3RvcmUgMjU1IC8vIGZ1bGwgYXJyYXkKCWxvYWQgMjU1IC8vIGZ1bGwgYXJyYXkKCWludGMgMiAvLyA2NAoJZ2V0Yml0CglyZXRzdWIKCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CglpbnRjIDEgLy8gMQoJcmV0dXJuCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHhiODQ0N2IzNiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjcmVhdGUgTm9PcAoJZXJyCgoqY2FsbF9Ob09wOgoJcHVzaGJ5dGVzIDB4MjE0Y2JiYmYgLy8gbWV0aG9kICJib29sVXBkYXRlSW5PYmplY3RJbkJveCgpYm9vbCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfYm9vbFVwZGF0ZUluT2JqZWN0SW5Cb3gKCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiADAAFAJgIEYlJlZgEAMRgUgQYLMRkIjQwATgAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAgAQVH3x1iAAJKSJPAlRQsCNDigABKIAIAAAAAAAAAAApIklUUL8ovkQ1/zT/JCNUKEy/KL5ENf80/yRTiSNDgAS4RHs2NhoAjgH/8QCABCFMu782GgCOAf+mAA==",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}